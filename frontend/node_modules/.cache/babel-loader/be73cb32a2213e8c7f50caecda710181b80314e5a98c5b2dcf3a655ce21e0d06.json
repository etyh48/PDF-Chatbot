{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport PDFViewer from './components/PDFViewer';\n// At the top of App.js, add this import:\nimport { FaUpload } from 'react-icons/fa';\nimport { FaFilePdf } from 'react-icons/fa';\nimport { FaTrash } from 'react-icons/fa';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from('chat_history').delete().eq('document_id', selectedDoc.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error('Error clearing chat:', error);\n      alert('Error clearing chat history');\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from('pdfs').createSignedUrl(url.split('/').pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log('Opening PDF:', {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Error opening PDF:', error);\n      alert('Error opening PDF');\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async documentId => {\n    setIsHistoryLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chat_history').select('*').eq('document_id', documentId).order('created_at', {\n        ascending: true\n      });\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n  const handleDocumentSelect = async doc => {\n    setSelectedDoc(doc);\n    await fetchChatHistory(doc.id);\n  };\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split('/').pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from('pdfs').remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from('documents').delete().eq('id', doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error('Delete error:', error);\n      alert('Error deleting document');\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    const {\n      data\n    } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n  const BATCH_SIZE = 10; // Reduced to 10 pages\n  const CHUNK_SIZE = 50; // Number of chunks per embedding request\n  const RETRY_DELAY = 5000; // 5 seconds between retries\n  const BATCH_DELAY = 2000; // 2 seconds between batches\n  const MAX_RETRIES = 3;\n\n  // Helper functions remain the same\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n  const processBatchWithRetry = async (documentId, pages, fileName, retryCount = 0) => {\n    try {\n      // Add delay between retries\n      if (retryCount > 0) {\n        await delay(RETRY_DELAY);\n      }\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          documentId,\n          pages\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      return await response.json();\n    } catch (error) {\n      if (retryCount < MAX_RETRIES) {\n        console.log(`Retry ${retryCount + 1} for batch in ${fileName}, waiting ${RETRY_DELAY / 1000}s...`);\n        return processBatchWithRetry(documentId, pages, fileName, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        // First upload file to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from('pdfs').upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('pdfs').getPublicUrl(uploadData.path);\n\n        // Get the total pages first before creating document\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from('documents').insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n\n        // Process pages in smaller batches\n        for (let i = 1; i <= totalPages; i += BATCH_SIZE) {\n          const endPage = Math.min(i + BATCH_SIZE - 1, totalPages);\n          const batchPages = [];\n          for (let pageNum = i; pageNum <= endPage; pageNum++) {\n            try {\n              const page = await pdf.getPage(pageNum);\n              const textContent = await page.getTextContent();\n              const pageText = textContent.items.map(item => item.str).join(' ');\n              batchPages.push({\n                text: pageText,\n                pageNumber: pageNum\n              });\n              setUploadProgress(prev => ({\n                ...prev,\n                [file.name]: pageNum / totalPages * 100\n              }));\n            } catch (pageError) {\n              console.error(`Error processing page ${pageNum}:`, pageError);\n              continue;\n            }\n          }\n          if (batchPages.length > 0) {\n            try {\n              await processBatchWithRetry(docData.id, batchPages, file.name);\n              console.log(`Successfully processed pages ${i}-${endPage}`);\n              await delay(BATCH_DELAY);\n            } catch (batchError) {\n              console.error(`Error processing batch pages ${i}-${endPage}:`, batchError);\n              continue;\n            }\n          }\n        }\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Error uploading files: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  const handleQuerySubmit = async e => {\n    e.preventDefault();\n    if (!query.trim() || !selectedDoc) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id,\n          chatHistory: chatHistory\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error('Failed to process query: ' + errorText);\n      }\n      const result = await response.json();\n\n      // Create new chat entry\n      const newEntry = {\n        document_id: selectedDoc.id,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context\n      };\n\n      // Store in database\n      const {\n        error: insertError\n      } = await supabase.from('chat_history').insert(newEntry);\n      if (insertError) throw insertError;\n\n      // Update local state\n      await fetchChatHistory(selectedDoc.id);\n      setQuery('');\n    } catch (error) {\n      console.error('Query error:', error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 19\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 13\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: '150px'\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"documents-list p-3\",\n          children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${(selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id) === doc.id ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n              onClick: () => handleDocumentSelect(doc),\n              children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-truncate\",\n                children: doc.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link text-danger p-1 delete-btn\",\n              onClick: () => handleDelete(doc),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedDoc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Chat About: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDoc.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Select a document to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message ai-message align-self-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 rounded-3\",\n                  children: [chat.response, chat.context && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"context-info mt-3 pt-3 border-top\",\n                    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: \"Source Context:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"context-content mt-2\",\n                      children: chat.context.slice(0, 10).map((ctx, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded border mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mb-0 small\",\n                          children: ctx.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-outline-primary btn-sm page-link\",\n                          onClick: () => openPdfPage(selectedDoc.file_url, ctx.page_number),\n                          children: [\"Page \", ctx.page_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 35\n                        }, this)]\n                      }, idx, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4  border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleQuerySubmit,\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDoc ? \"Ask a question...\" : \"Select a document first\",\n              disabled: !selectedDoc || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: !selectedDoc || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }, this), pdfViewerState.isOpen && /*#__PURE__*/_jsxDEV(PDFViewer, {\n      url: pdfViewerState.url,\n      pageNumber: pdfViewerState.pageNumber,\n      onClose: closePdfViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"JIJnXWiTE6Tk16kLYkEHgu6bfNI=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","pdfjsLib","getDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","current","scrollIntoView","behavior","fetchChatHistory","id","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","openPdfPage","data","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","documentId","select","order","ascending","handleDocumentSelect","doc","handleDelete","filename","file_url","storageError","remove","deleteError","fetchDocuments","handleFileChange","event","files","Array","target","filter","file","isValidType","type","isValidSize","size","name","BATCH_SIZE","CHUNK_SIZE","RETRY_DELAY","BATCH_DELAY","MAX_RETRIES","delay","ms","Promise","resolve","setTimeout","processBatchWithRetry","pages","fileName","retryCount","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","json","handleUpload","length","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","single","i","endPage","Math","min","batchPages","pageNum","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","prev","pageError","batchError","message","handleQuerySubmit","e","preventDefault","trim","result","newEntry","document_id","answer","context","insertError","className","children","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","chat","ref","slice","ctx","idx","content","page_number","onSubmit","value","placeholder","onClose","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport PDFViewer from './components/PDFViewer';\n// At the top of App.js, add this import:\nimport { FaUpload } from 'react-icons/fa';\nimport { FaFilePdf } from 'react-icons/fa';\nimport { FaTrash } from 'react-icons/fa';\n\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\"; \n\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    \n    try {\n      // Delete from database\n      const { error } = await supabase\n        .from('chat_history')\n        .delete()\n        .eq('document_id', selectedDoc.id);\n  \n      if (error) throw error;\n  \n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error('Error clearing chat:', error);\n      alert('Error clearing chat history');\n    }\n  };\n\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n  \n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase\n        .storage\n        .from('pdfs')\n        .createSignedUrl(url.split('/').pop(), 3600);\n  \n      if (error) throw error;\n  \n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n        \n        // Log for debugging\n        console.log('Opening PDF:', {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n  \n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Error opening PDF:', error);\n      alert('Error opening PDF');\n    }\n  };\n\n  \n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async (documentId) => {\n  setIsHistoryLoading(true);\n  try {\n    const { data, error } = await supabase\n      .from('chat_history')\n      .select('*')\n      .eq('document_id', documentId)\n      .order('created_at', { ascending: true });\n\n    if (error) throw error;\n    setChatHistory(data || []);\n  } catch (error) {\n    console.error('Error fetching chat history:', error);\n  } finally {\n    setIsHistoryLoading(false);\n  }\n};\n\n  const handleDocumentSelect = async (doc) => {\n  setSelectedDoc(doc);\n  await fetchChatHistory(doc.id);\n};\n\n  \nconst handleDelete = async (doc) => {\n  try {\n    // Delete from storage first\n    const filename = doc.file_url.split('/').pop();\n    const { error: storageError } = await supabase.storage\n      .from('pdfs')\n      .remove([filename]);\n\n    if (storageError) throw storageError;\n\n    // Delete document (will cascade delete chunks)\n    const { error: deleteError } = await supabase\n      .from('documents')\n      .delete()\n      .eq('id', doc.id);\n\n    if (deleteError) throw deleteError;\n\n    // Refresh documents list\n    fetchDocuments();\n  } catch (error) {\n    console.error('Delete error:', error);\n    alert('Error deleting document');\n  }\n};\n\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    const { data } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n      \n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      \n      return isValidType && isValidSize;\n    });\n  \n    setSelectedFiles(files);\n  };\n\n  const BATCH_SIZE = 10; // Reduced to 10 pages\nconst CHUNK_SIZE = 50; // Number of chunks per embedding request\nconst RETRY_DELAY = 5000; // 5 seconds between retries\nconst BATCH_DELAY = 2000; // 2 seconds between batches\nconst MAX_RETRIES = 3;\n\n// Helper functions remain the same\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst processBatchWithRetry = async (documentId, pages, fileName, retryCount = 0) => {\n  try {\n    // Add delay between retries\n    if (retryCount > 0) {\n      await delay(RETRY_DELAY);\n    }\n\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          documentId,\n          pages\n        })\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (retryCount < MAX_RETRIES) {\n      console.log(`Retry ${retryCount + 1} for batch in ${fileName}, waiting ${RETRY_DELAY/1000}s...`);\n      return processBatchWithRetry(documentId, pages, fileName, retryCount + 1);\n    }\n    throw error;\n  }\n};\n\nconst handleUpload = async () => {\n  if (!selectedFiles.length) return;\n\n  setLoading(true);\n  try {\n    for (const file of selectedFiles) {\n      // First upload file to storage\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('pdfs')\n        .upload(`${Date.now()}_${file.name}`, file);\n\n      if (uploadError) throw uploadError;\n\n      // Get public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('pdfs')\n        .getPublicUrl(uploadData.path);\n\n      // Get the total pages first before creating document\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await getDocument({ data: arrayBuffer }).promise;\n      const totalPages = pdf.numPages;\n\n      // Create document record with total pages\n      const { data: docData, error: docError } = await supabase\n        .from('documents')\n        .insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        })\n        .select()\n        .single();\n\n      if (docError) throw docError;\n\n      // Process pages in smaller batches\n      for (let i = 1; i <= totalPages; i += BATCH_SIZE) {\n        const endPage = Math.min(i + BATCH_SIZE - 1, totalPages);\n        const batchPages = [];\n        \n        for (let pageNum = i; pageNum <= endPage; pageNum++) {\n          try {\n            const page = await pdf.getPage(pageNum);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map(item => item.str).join(' ');\n            \n            batchPages.push({\n              text: pageText,\n              pageNumber: pageNum\n            });\n\n            setUploadProgress(prev => ({\n              ...prev,\n              [file.name]: (pageNum / totalPages) * 100\n            }));\n          } catch (pageError) {\n            console.error(`Error processing page ${pageNum}:`, pageError);\n            continue;\n          }\n        }\n\n        if (batchPages.length > 0) {\n          try {\n            await processBatchWithRetry(docData.id, batchPages, file.name);\n            console.log(`Successfully processed pages ${i}-${endPage}`);\n            await delay(BATCH_DELAY);\n          } catch (batchError) {\n            console.error(`Error processing batch pages ${i}-${endPage}:`, batchError);\n            continue;\n          }\n        }\n      }\n\n      setUploadProgress(prev => ({ ...prev, [file.name]: 100 }));\n    }\n\n    setSelectedFiles([]);\n    setUploadProgress({});\n    fetchDocuments();\n  } catch (error) {\n    console.error('Upload error:', error);\n    alert('Error uploading files: ' + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  \n\n\n\n  // Modify handleQuerySubmit to store chat history\n  const handleQuerySubmit = async (e) => {\n  e.preventDefault();\n  if (!query.trim() || !selectedDoc) return;\n\n  setLoading(true);\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id,\n          chatHistory: chatHistory\n        })\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error('Failed to process query: ' + errorText);\n    }\n\n    const result = await response.json();\n    \n    // Create new chat entry\n    const newEntry = {\n      document_id: selectedDoc.id,\n      query: query.trim(),\n      response: result.answer,\n      context: result.context\n    };\n\n    // Store in database\n    const { error: insertError } = await supabase\n      .from('chat_history')\n      .insert(newEntry);\n\n    if (insertError) throw insertError;\n\n    // Update local state\n    await fetchChatHistory(selectedDoc.id);\n    setQuery('');\n  } catch (error) {\n    console.error('Query error:', error);\n    alert(error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  \n\nreturn (\n  <div className=\"container-fluid vh-100\">\n    <div className=\"row h-100\">\n      {/* Sidebar */}\n      <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n        <div className=\"sticky-top\">\n          <div className=\"p-4 border-bottom\">\n            <h5 className=\"mb-3\">PDF Documents</h5>\n            <div className=\"d-flex gap-2 mb-3\">\n              <div className=\"upload-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf\"\n                  multiple\n                  onChange={handleFileChange}\n                  className=\"d-none\"\n                  id=\"fileInput\"\n                  disabled={loading}\n                />\n                <label htmlFor=\"fileInput\" className=\"btn btn-outline-primary d-flex align-items-center gap-2\">\n                  <FaUpload />\n                  Choose Files\n                </label>\n              </div>\n              <button \n                className=\"btn btn-primary\"\n                onClick={handleUpload}\n                disabled={!selectedFiles.length || loading}\n              >\n                Upload {selectedFiles.length ? `(${selectedFiles.length})` : ''}\n              </button>\n            </div>\n\n            {/* Selected Files List */}\n            {selectedFiles.length > 0 && (\n              <div className=\"selected-files mb-3\">\n                {Array.from(selectedFiles).map((file, index) => (\n                  <div key={index} className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\">\n                    <div className=\"d-flex align-items-center\">\n                      <FaFilePdf className=\"text-primary me-2\" />\n                      <span className=\"text-truncate\" style={{ maxWidth: '150px' }}>{file.name}</span>\n                    </div>\n                    <button \n                      className=\"btn btn-link text-danger p-1\"\n                      onClick={() => {\n                        const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                        setSelectedFiles(newFiles);\n                      }}\n                    >\n                      <FaTrash size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Upload Progress */}\n            {Object.entries(uploadProgress).map(([filename, progress]) => (\n              <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                <div className=\"small text-muted mb-1\">{filename}</div>\n                <div className=\"progress\" style={{ height: '4px' }}>\n                  <div \n                    className=\"progress-bar\" \n                    role=\"progressbar\" \n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n\n          {/* Documents List */}\n          <div className=\"documents-list p-3\">\n            {documents.map(doc => (\n              <div\n                key={doc.id}\n                className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                  selectedDoc?.id === doc.id ? 'selected' : ''\n                }`}\n              >\n                <div \n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n                <button \n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={() => handleDelete(doc)}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Main Chat Area */}\n        <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n          {/* Chat Header */}\n          <div className=\"chat-header p-4 bg-light border-bottom\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {selectedDoc ? (\n                <>\n                  <h6 className=\"mb-0\">Chat About: <br></br><i><strong>{selectedDoc.filename}</strong></i></h6>\n                  {chatHistory.length > 0 && (\n                    <button \n                      className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                      onClick={clearChat}\n                    >\n                      <FaTrash /> Clear Chat\n                    </button>\n                  )}\n                </>\n              ) : (\n                <h5 className=\"mb-0\">Select a document to start chatting</h5>\n              )}\n            </div>\n          </div>\n\n          {/* Chat Messages */}\n          <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n            {isHistoryLoading ? (\n              <div className=\"text-center text-muted\">Loading chat history...</div>\n            ) : (\n              <div className=\"d-flex flex-column gap-4\">\n                {chatHistory.map((chat, index) => (\n                  <div \n                    key={index} \n                    className=\"d-flex flex-column gap-3\"\n                    ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                  >\n                    {/* User Message */}\n                    <div className=\"message user-message align-self-end\">\n                      <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                        {chat.query}\n                      </div>\n                    </div>\n\n                    {/* AI Message */}\n                    <div className=\"message ai-message align-self-start\">\n                      <div className=\"message-content p-3 rounded-3\">\n                        {chat.response}\n                        \n                        {chat.context && (\n                          <div className=\"context-info mt-3 pt-3 border-top\">\n                            <small className=\"text-muted\">Source Context:</small>\n                            <div className=\"context-content mt-2\">\n                              {chat.context.slice(0, 10).map((ctx, idx) => (\n                                <div key={idx} className=\"d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded border mb-2\">\n                                  <p className=\"mb-0 small\">{ctx.content}</p>\n                                  <button\n                                    className=\"btn btn-outline-primary btn-sm page-link\"\n                                    onClick={() => openPdfPage(selectedDoc.file_url, ctx.page_number)}\n                                  >\n                                    Page {ctx.page_number}\n                                  </button>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Chat Input */}\n          <div className=\"chat-input p-4  border-top\">\n            <form onSubmit={handleQuerySubmit} className=\"d-flex gap-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder={selectedDoc ? \"Ask a question...\" : \"Select a document first\"}\n                disabled={!selectedDoc || loading}\n              />\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary px-4\"\n                disabled={!selectedDoc || loading || !query.trim()}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* PDF Viewer Modal */}\n      {pdfViewerState.isOpen && (\n        <PDFViewer \n          url={pdfViewerState.url}\n          pageNumber={pdfViewerState.pageNumber}\n          onClose={closePdfViewer}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}