{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus, FaComments } from \"react-icons/fa\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const [chatDocuments, setChatDocuments] = useState([]);\n  const renderChatMessage = chat => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message ai-message align-self-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 rounded-3 outer\",\n      children: /*#__PURE__*/_jsxDEV(MessageFormatter, {\n        content: chat.response,\n        context: chat.context,\n        selectedDocs: selectedDocs,\n        openPdfPage: openPdfPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n  useEffect(() => {\n    fetchAllChats();\n  }, []);\n  const fetchAllChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching all chats:', error);\n    }\n  };\n\n  // Add this function to handle multiple document selection\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n\n  // Add these two new helper functions here:\n\n  const clearChat = async () => {\n    if (!selectedChat) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from(\"chats\").delete().eq(\"id\", selectedChat.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n      setSelectedChat(null);\n      await fetchChats(); // Refresh the chat list\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const fetchChatMessages = async chatId => {\n    if (!chatId) {\n      console.log('No chat ID provided to fetchChatMessages');\n      return;\n    }\n    setIsHistoryLoading(true);\n    try {\n      // Fetch chat details first to get document IDs\n      const {\n        data: chatData,\n        error: chatError\n      } = await supabase.from(\"chats\").select(\"*\").eq(\"id\", chatId).single();\n      if (chatError) throw chatError;\n\n      // Fetch the actual documents using document_ids from chat\n      if (chatData.document_ids && chatData.document_ids.length > 0) {\n        const {\n          data: docsData,\n          error: docsError\n        } = await supabase.from(\"documents\").select(\"*\").in(\"id\", chatData.document_ids);\n        if (docsError) throw docsError;\n        setChatDocuments(docsData || []);\n        setSelectedDocs(docsData || []); // Update selected docs to match chat's documents\n      }\n\n      // Fetch chat messages\n      const {\n        data: messages,\n        error: messagesError\n      } = await supabase.from(\"chat_messages\").select(\"*\").eq(\"chat_id\", chatId).order(\"created_at\", {\n        ascending: true\n      });\n      if (messagesError) throw messagesError;\n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n      setChatDocuments([]);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n  const getDocumentIds = docs => {\n    if (!Array.isArray(docs) || !docs.length) return [];\n    return docs.filter(doc => doc && doc.id).map(doc => {\n      // Ensure we're returning numbers, not strings\n      const id = typeof doc.id === 'string' ? parseInt(doc.id, 10) : doc.id;\n      return isNaN(id) ? null : id;\n    }).filter(id => id !== null); // Remove any null values\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('documents').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChatSelect = async chat => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => documents.find(doc => doc.id === id)).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n\n  // Update the New Chat button handler\n  // Modify handleNewChat\n  const handleNewChat = async () => {\n    // Just reset states for new chat without creating any messages\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatDocuments([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n  {/* Update handleQuerySubmit to remove the event parameter */}\n  const handleQuerySubmit = async () => {\n    if (!(query !== null && query !== void 0 && query.trim())) {\n      alert('Please enter a query');\n      return;\n    }\n\n    // For new chats, require document selection\n    if (!currentChatId && !(selectedDocs !== null && selectedDocs !== void 0 && selectedDocs.length)) {\n      alert('Please select at least one document to start a chat');\n      return;\n    }\n    setLoading(true);\n    try {\n      let chatId = currentChatId;\n      let documentIds = getDocumentIds(currentChatId ? chatDocuments : selectedDocs);\n\n      // For new chats, create the chat first\n      if (!chatId) {\n        const {\n          data: newChat,\n          error: chatError\n        } = await supabase.from('chats').insert({\n          title: query.trim(),\n          document_ids: documentIds\n        }).select().single();\n        if (chatError) throw chatError;\n        chatId = newChat.id; // Store the new chat ID\n        setCurrentChatId(chatId); // Update the state\n        setChatDocuments(selectedDocs);\n      }\n\n      // Process query\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const result = await response.json();\n\n      // Store the actual query and response using the chat ID\n      const {\n        error: messageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: chatId,\n        // Use the local chatId variable\n        query: query.trim(),\n        response: result.answer,\n        context: result.context || null,\n        document_ids: documentIds,\n        type: 'conversation'\n      });\n      if (messageError) throw messageError;\n\n      // Use the chatId for fetching messages\n      await fetchChatMessages(chatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update fetchChatHistory to work with integer IDs\n  const fetchChatHistory = async chatId => {\n    setIsHistoryLoading(true);\n    try {\n      let query = supabase.from(\"chat_history\").select(\"*\").order(\"created_at\", {\n        ascending: true\n      });\n\n      // Only add the chat_id filter if it exists\n      if (chatId) {\n        query = query.eq(\"chat_id\", chatId);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 19\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 13\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: \"150px\"\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: \"4px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\",\n              onClick: handleNewChat,\n              children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 15\n              }, this), \" New Chat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-list\",\n              children: allChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat-item p-3 rounded mb-2 cursor-pointer ${currentChatId === chat.id ? \"selected\" : \"\"}`,\n                onClick: () => {\n                  setCurrentChatId(chat.id);\n                  fetchChatMessages(chat.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaComments, {\n                    className: \"text-primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-preview\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-title text-truncate\",\n                      children: chat.title || `Chat ${chat.id}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: new Date(chat.created_at).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 19\n                }, this)\n              }, chat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"documents-list p-3\",\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"} ${currentChatId ? \"disabled\" : \"\"}`,\n              children: [!currentChatId ?\n              /*#__PURE__*/\n              // Only show clickable elements if no chat is selected\n              _jsxDEV(\"div\", {\n                className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n                onClick: () => handleDocumentSelect(doc),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedDocs.some(d => d.id === doc.id),\n                  onChange: () => handleDocumentSelect(doc),\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FaFilePdf, {\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-truncate\",\n                  children: doc.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 17\n              }, this) :\n              /*#__PURE__*/\n              // Read-only view for existing chats\n              _jsxDEV(\"div\", {\n                className: \"d-flex align-items-center flex-grow-1 gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-truncate\",\n                  children: doc.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this), !currentChatId && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link text-danger p-1 delete-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(doc);\n                },\n                children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: currentChatId ?\n            /*#__PURE__*/\n            // Existing chat - show chat documents\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Chat Documents (\", chatDocuments.length, \"):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: chatDocuments.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 15\n              }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 19\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true) :\n            /*#__PURE__*/\n            // New chat - show document selection state\n            _jsxDEV(\"h6\", {\n              className: \"mb-0\",\n              children: selectedDocs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Selected Documents (\", selectedDocs.length, \"):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: selectedDocs.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true) : \"Select documents to start a new chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 19\n              }, this), renderChatMessage(chat)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4 border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleQuerySubmit();\n            },\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length > 0 ? \"Ask a question about the selected documents...\" : \"Select at least one document first\",\n              disabled: selectedDocs.length === 0 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: selectedDocs.length === 0 || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"5E9R/jLunBwAAUGGZLJytTiLR+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","FaPlus","FaComments","pdfjsLib","getDocument","MessageFormatter","ChatHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","chats","setChats","selectedChat","setSelectedChat","isCreatingNewChat","setIsCreatingNewChat","currentChatId","setCurrentChatId","allChats","setAllChats","chatDocuments","setChatDocuments","renderChatMessage","chat","className","children","content","response","context","openPdfPage","fileName","_jsxFileName","lineNumber","columnNumber","fetchInitialData","Promise","all","fetchDocuments","fetchChats","current","scrollIntoView","behavior","fetchChatHistory","id","fetchAllChats","data","error","from","select","order","ascending","console","handleDocumentSelect","doc","prev","isSelected","some","d","filter","clearChat","delete","eq","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","fetchChatMessages","chatId","chatData","chatError","single","document_ids","length","docsData","docsError","in","messages","messagesError","getDocumentIds","docs","Array","isArray","map","isNaN","handleDelete","filename","file_url","storageError","remove","deleteError","handleFileChange","event","files","target","file","isValidType","type","isValidSize","size","name","handleUpload","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","fullText","i","getPage","textContent","getTextContent","pageText","items","item","str","join","push","text","fetch","method","headers","Authorization","body","JSON","stringify","documentId","pages","ok","errorText","Error","message","handleChatSelect","find","Boolean","handleNewChat","handleQuerySubmit","trim","documentIds","newChat","title","result","json","messageError","chat_id","answer","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","created_at","toLocaleDateString","checked","e","stopPropagation","ref","onSubmit","preventDefault","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus, FaComments  } from \"react-icons/fa\";\n\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const [chatDocuments, setChatDocuments] = useState([]);\n\n  const renderChatMessage = (chat) => (\n    <div className=\"message ai-message align-self-start\">\n      <div className=\"p-3 rounded-3 outer\">\n        <MessageFormatter \n          content={chat.response}\n          context={chat.context}\n          selectedDocs={selectedDocs}\n          openPdfPage={openPdfPage}\n        />\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([\n        fetchDocuments(),\n        fetchChats()\n      ]);\n    };\n    \n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  useEffect(() => {\n    fetchAllChats();\n  }, []);\n\n  const fetchAllChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching all chats:', error);\n    }\n  };\n\n\n\n\n  // Add this function to handle multiple document selection\nconst handleDocumentSelect = (doc) => {\n  setSelectedDocs(prev => {\n    const isSelected = prev.some(d => d.id === doc.id);\n    if (isSelected) {\n      return prev.filter(d => d.id !== doc.id);\n    } else {\n      return [...prev, doc];\n    }\n  });\n};\n\n\n  // Add these two new helper functions here:\n\n\n  const clearChat = async () => {\n  if (!selectedChat) return;\n\n  try {\n    // Delete from database\n    const { error } = await supabase\n      .from(\"chats\")\n      .delete()\n      .eq(\"id\", selectedChat.id);\n\n    if (error) throw error;\n\n    // Clear local state\n    setChatHistory([]);\n    setSelectedChat(null);\n    await fetchChats(); // Refresh the chat list\n\n  } catch (error) {\n    console.error(\"Error clearing chat:\", error);\n    alert(\"Error clearing chat history\");\n  }\n};\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null,\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page,\n        });\n\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null,\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  const fetchChatMessages = async (chatId) => {\n    if (!chatId) {\n      console.log('No chat ID provided to fetchChatMessages');\n      return;\n    }\n    \n    setIsHistoryLoading(true);\n    try {\n      // Fetch chat details first to get document IDs\n      const { data: chatData, error: chatError } = await supabase\n        .from(\"chats\")\n        .select(\"*\")\n        .eq(\"id\", chatId)\n        .single();\n  \n      if (chatError) throw chatError;\n  \n      // Fetch the actual documents using document_ids from chat\n      if (chatData.document_ids && chatData.document_ids.length > 0) {\n        const { data: docsData, error: docsError } = await supabase\n          .from(\"documents\")\n          .select(\"*\")\n          .in(\"id\", chatData.document_ids);\n  \n        if (docsError) throw docsError;\n        \n        setChatDocuments(docsData || []);\n        setSelectedDocs(docsData || []); // Update selected docs to match chat's documents\n      }\n  \n      // Fetch chat messages\n      const { data: messages, error: messagesError } = await supabase\n        .from(\"chat_messages\")\n        .select(\"*\")\n        .eq(\"chat_id\", chatId)\n        .order(\"created_at\", { ascending: true });\n  \n      if (messagesError) throw messagesError;\n      \n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n      setChatDocuments([]);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  const getDocumentIds = (docs) => {\n    if (!Array.isArray(docs) || !docs.length) return [];\n    return docs\n      .filter(doc => doc && doc.id)\n      .map(doc => {\n        // Ensure we're returning numbers, not strings\n        const id = typeof doc.id === 'string' ? parseInt(doc.id, 10) : doc.id;\n        return isNaN(id) ? null : id;\n      })\n      .filter(id => id !== null); // Remove any null values\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('documents')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter((file) => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n\n      return isValidType && isValidSize;\n    });\n\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: { publicUrl },\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChatSelect = async (chat) => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => \n      documents.find(doc => doc.id === id)\n    ).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n  \n  // Update the New Chat button handler\n  // Modify handleNewChat\n  const handleNewChat = async () => {\n    // Just reset states for new chat without creating any messages\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatDocuments([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n{/* Update handleQuerySubmit to remove the event parameter */}\nconst handleQuerySubmit = async () => {\n  if (!query?.trim()) {\n    alert('Please enter a query');\n    return;\n  }\n\n  // For new chats, require document selection\n  if (!currentChatId && !selectedDocs?.length) {\n    alert('Please select at least one document to start a chat');\n    return;\n  }\n\n  setLoading(true);\n  try {\n    let chatId = currentChatId;\n    let documentIds = getDocumentIds(currentChatId ? chatDocuments : selectedDocs);\n\n    // For new chats, create the chat first\n    if (!chatId) {\n      const { data: newChat, error: chatError } = await supabase\n        .from('chats')\n        .insert({\n          title: query.trim(),\n          document_ids: documentIds\n        })\n        .select()\n        .single();\n\n      if (chatError) throw chatError;\n\n      chatId = newChat.id; // Store the new chat ID\n      setCurrentChatId(chatId); // Update the state\n      setChatDocuments(selectedDocs);\n    }\n\n    // Process query\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n\n    const result = await response.json();\n\n    // Store the actual query and response using the chat ID\n    const { error: messageError } = await supabase\n      .from(\"chat_messages\")\n      .insert({\n        chat_id: chatId, // Use the local chatId variable\n        query: query.trim(),\n        response: result.answer,\n        context: result.context || null,\n        document_ids: documentIds,\n        type: 'conversation'\n      });\n\n    if (messageError) throw messageError;\n\n    // Use the chatId for fetching messages\n    await fetchChatMessages(chatId);\n    setQuery(\"\");\n  } catch (error) {\n    console.error(\"Query error:\", error);\n    alert(\"Error processing query: \" + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n// Update fetchChatHistory to work with integer IDs\nconst fetchChatHistory = async (chatId) => {\n  setIsHistoryLoading(true);\n  try {\n    let query = supabase\n      .from(\"chat_history\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: true });\n    \n    // Only add the chat_id filter if it exists\n    if (chatId) {\n      query = query.eq(\"chat_id\", chatId);\n    }\n\n    const { data, error } = await query;\n\n    if (error) throw error;\n    setChatHistory(data || []);\n  } catch (error) {\n    console.error(\"Error fetching chat history:\", error);\n  } finally {\n    setIsHistoryLoading(false);\n  }\n};\n\nreturn (\n  <div className=\"container-fluid vh-100\">\n    <div className=\"row h-100\">\n      {/* Single Sidebar */}\n      <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n        <div className=\"sticky-top\">\n          {/* PDF Documents Section */}\n          <div className=\"p-4 border-bottom\">\n            <h5 className=\"mb-3\">PDF Documents</h5>\n            <div className=\"d-flex gap-2 mb-3\">\n              <div className=\"upload-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf\"\n                  multiple\n                  onChange={handleFileChange}\n                  className=\"d-none\"\n                  id=\"fileInput\"\n                  disabled={loading}\n                />\n                <label\n                  htmlFor=\"fileInput\"\n                  className=\"btn btn-outline-primary d-flex align-items-center gap-2\"\n                >\n                  <FaUpload />\n                  Choose Files\n                </label>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleUpload}\n                disabled={!selectedFiles.length || loading}\n              >\n                Upload {selectedFiles.length ? `(${selectedFiles.length})` : \"\"}\n              </button>\n            </div>\n\n            {/* Selected Files List */}\n            {selectedFiles.length > 0 && (\n              <div className=\"selected-files mb-3\">\n                {Array.from(selectedFiles).map((file, index) => (\n                  <div\n                    key={index}\n                    className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\"\n                  >\n                    <div className=\"d-flex align-items-center\">\n                      <FaFilePdf className=\"text-primary me-2\" />\n                      <span className=\"text-truncate\" style={{ maxWidth: \"150px\" }}>\n                        {file.name}\n                      </span>\n                    </div>\n                    <button\n                      className=\"btn btn-link text-danger p-1\"\n                      onClick={() => {\n                        const newFiles = Array.from(selectedFiles).filter(\n                          (_, i) => i !== index\n                        );\n                        setSelectedFiles(newFiles);\n                      }}\n                    >\n                      <FaTrash size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Upload Progress */}\n            {Object.entries(uploadProgress).map(([filename, progress]) => (\n              <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                <div className=\"small text-muted mb-1\">{filename}</div>\n                <div className=\"progress\" style={{ height: \"4px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Chat History Section */}\n          <div className=\"p-4\">\n            <button \n              className=\"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\"\n              onClick={handleNewChat}\n            >\n              <FaPlus size={14} /> New Chat\n            </button>\n\n            <div className=\"chat-list\">\n              {allChats.map(chat => (\n                <div\n                  key={chat.id}\n                  className={`chat-item p-3 rounded mb-2 cursor-pointer ${\n                    currentChatId === chat.id ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    setCurrentChatId(chat.id);\n                    fetchChatMessages(chat.id);\n                  }}\n                >\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <FaComments className=\"text-primary\" />\n                    <div className=\"chat-preview\">\n                      <div className=\"chat-title text-truncate\">\n                        {chat.title || `Chat ${chat.id}`}\n                      </div>\n                      <small className=\"text-muted\">\n                        {new Date(chat.created_at).toLocaleDateString()}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Documents List */}\n          <div className=\"documents-list p-3\">\n          {documents.map((doc) => (\n            <div\n              key={doc.id}\n              className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"\n              } ${currentChatId ? \"disabled\" : \"\"}`}\n            >\n              {!currentChatId ? (\n                // Only show clickable elements if no chat is selected\n                <div\n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedDocs.some(d => d.id === doc.id)}\n                    onChange={() => handleDocumentSelect(doc)}\n                    className=\"me-2\"\n                  />\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n              ) : (\n                // Read-only view for existing chats\n                <div className=\"d-flex align-items-center flex-grow-1 gap-2\">\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n              )}\n              \n              {!currentChatId && (\n                <button\n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDelete(doc);\n                  }}\n                >\n                  <FaTrash />\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n        {/* Chat Header */}\n        <div className=\"chat-header p-4 bg-light border-bottom\">\n        <div className=\"d-flex justify-content-between align-items-center\">\n          {currentChatId ? (\n            // Existing chat - show chat documents\n            <>\n              <h6 className=\"mb-0\">\n                Chat Documents ({chatDocuments.length}):\n                <br />\n                <small className=\"text-muted\">\n                  {chatDocuments.map(doc => doc.filename).join(\", \")}\n                </small>\n              </h6>\n              {chatHistory.length > 0 && (\n                <button\n                  className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                  onClick={clearChat}\n                >\n                  <FaTrash /> Clear Chat\n                </button>\n              )}\n            </>\n          ) : (\n            // New chat - show document selection state\n            <h6 className=\"mb-0\">\n              {selectedDocs.length > 0 ? (\n                <>\n                  Selected Documents ({selectedDocs.length}):\n                  <br />\n                  <small className=\"text-muted\">\n                    {selectedDocs.map(doc => doc.filename).join(\", \")}\n                  </small>\n                </>\n              ) : (\n                \"Select documents to start a new chat\"\n              )}\n            </h6>\n          )}\n        </div>\n      </div>\n\n        {/* Chat Messages */}\n        <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n          {isHistoryLoading ? (\n            <div className=\"text-center text-muted\">\n              Loading chat history...\n            </div>\n          ) : (\n            <div className=\"d-flex flex-column gap-4\">\n              {chatHistory.map((chat, index) => (\n                <div\n                  key={index}\n                  className=\"d-flex flex-column gap-3\"\n                  ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                >\n                  <div className=\"message user-message align-self-end\">\n                    <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                      {chat.query}\n                    </div>\n                  </div>\n                  {renderChatMessage(chat)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Chat Input */}\n        <div className=\"chat-input p-4 border-top\">\n        <form \n          onSubmit={(e) => {\n            e.preventDefault();\n            handleQuerySubmit();\n          }} \n          className=\"d-flex gap-3\"\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder={\n              selectedDocs.length > 0\n                ? \"Ask a question about the selected documents...\"\n                : \"Select at least one document first\"\n            }\n            disabled={selectedDocs.length === 0 || loading}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary px-4\"\n            disabled={selectedDocs.length === 0 || loading || !query.trim()}\n          >\n            Send\n          </button>\n        </form>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}