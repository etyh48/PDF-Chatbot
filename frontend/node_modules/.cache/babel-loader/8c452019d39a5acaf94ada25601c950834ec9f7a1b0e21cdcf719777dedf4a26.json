{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs';\nimport { Box, Drawer, AppBar, Toolbar, Typography, Divider, List, ListItem, ListItemIcon, ListItemText, Button, TextField, Paper, IconButton, Chip, CircularProgress, Container, Card, CardContent, LinearProgress, useTheme } from '@mui/material';\nimport { AddCircleOutline, Delete, Send, UploadFile, Description, Chat as ChatIcon, ExpandMore, ExpandLess, Launch } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 320;\n\n// Styled components\nconst StyledDrawer = styled(Drawer)(({\n  theme\n}) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  '& .MuiDrawer-paper': {\n    width: drawerWidth,\n    boxSizing: 'border-box'\n  }\n}));\n_c = StyledDrawer;\nconst Main = styled('main')(({\n  theme\n}) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  marginLeft: drawerWidth,\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column'\n}));\n_c2 = Main;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2)\n}));\n_c3 = ChatContainer;\nconst MessageBubble = styled(Paper)(({\n  theme,\n  variant\n}) => ({\n  padding: theme.spacing(2),\n  maxWidth: '70%',\n  marginBottom: theme.spacing(2),\n  backgroundColor: variant === 'user' ? theme.palette.primary.main : theme.palette.grey[50],\n  color: variant === 'user' ? theme.palette.primary.contrastText : 'inherit',\n  alignSelf: variant === 'user' ? 'flex-end' : 'flex-start',\n  borderRadius: theme.spacing(2)\n}));\n_c4 = MessageBubble;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\n_c5 = InputContainer;\nconst FileInput = styled('input')({\n  display: 'none'\n});\n_c6 = FileInput;\nfunction App() {\n  _s();\n  const theme = useTheme();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const latestMessageRef = useRef(null);\n\n  // Supabase client setup\n  const supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\n\n  // File handling functions\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024;\n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // Document selection handler\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      return isSelected ? prev.filter(d => d.id !== doc.id) : [...prev, doc];\n    });\n  };\n\n  // Chat message rendering\n  const renderMessage = (message, index) => /*#__PURE__*/_jsxDEV(Box, {\n    ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 2,\n    children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n      variant: \"user\",\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: message.query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n      elevation: 1,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        dangerouslySetInnerHTML: {\n          __html: message.response\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), message.context && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"textSecondary\",\n          children: \"Source References:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), message.context.map((ctx, idx) => /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: ctx.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              endIcon: /*#__PURE__*/_jsxDEV(Launch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 30\n              }, this),\n              onClick: () => openPdfPage(ctx.file_url, ctx.page_number),\n              children: [\"Page \", ctx.page_number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []);\n\n  // Scroll to latest message\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n\n  // Fetch documents\n  const fetchDocuments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('documents').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  // Fetch all chats\n  const fetchChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle document deletion\n  const handleDelete = async doc => {\n    try {\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  // Handle query submission\n  const handleQuerySubmit = async () => {\n    if (!(query !== null && query !== void 0 && query.trim())) {\n      alert('Please enter a query');\n      return;\n    }\n    if (!currentChatId && !(selectedDocs !== null && selectedDocs !== void 0 && selectedDocs.length)) {\n      alert('Please select at least one document to start a chat');\n      return;\n    }\n    setLoading(true);\n    try {\n      let chatId = currentChatId;\n      let documentIds = selectedDocs.map(doc => doc.id);\n      if (!chatId) {\n        const {\n          data: newChat,\n          error: chatError\n        } = await supabase.from('chats').insert({\n          title: query.trim(),\n          document_ids: documentIds\n        }).select().single();\n        if (chatError) throw chatError;\n        chatId = newChat.id;\n        setCurrentChatId(chatId);\n      }\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const result = await response.json();\n      const {\n        error: messageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: chatId,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context || null,\n        document_ids: documentIds,\n        type: 'conversation'\n      });\n      if (messageError) throw messageError;\n      fetchChatMessages(chatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch chat messages\n  const fetchChatMessages = async chatId => {\n    if (!chatId) return;\n    setLoading(true);\n    try {\n      var _chatData$document_id;\n      const {\n        data: chatData,\n        error: chatError\n      } = await supabase.from(\"chats\").select(\"*\").eq(\"id\", chatId).single();\n      if (chatError) throw chatError;\n      if (((_chatData$document_id = chatData.document_ids) === null || _chatData$document_id === void 0 ? void 0 : _chatData$document_id.length) > 0) {\n        const {\n          data: docsData,\n          error: docsError\n        } = await supabase.from(\"documents\").select(\"*\").in(\"id\", chatData.document_ids);\n        if (docsError) throw docsError;\n        setSelectedDocs(docsData || []);\n      }\n      const {\n        data: messages,\n        error: messagesError\n      } = await supabase.from(\"chat_messages\").select(\"*\").eq(\"chat_id\", chatId).order(\"created_at\", {\n        ascending: true\n      });\n      if (messagesError) throw messagesError;\n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle new chat creation\n  const handleNewChat = () => {\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Open PDF viewer\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        const page = parseInt(pageNumber, 10) || 1;\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(StyledDrawer, {\n      variant: \"permanent\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"PDF Chat Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          children: [/*#__PURE__*/_jsxDEV(FileInput, {\n            id: \"file-input\",\n            type: \"file\",\n            accept: \".pdf\",\n            multiple: true,\n            onChange: handleFileChange,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"span\",\n            startIcon: /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 26\n            }, this),\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: \"Choose Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          disabled: !selectedFiles.length || loading,\n          onClick: handleUpload,\n          children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: documents.map(doc => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedDocs.some(d => d.id === doc.id),\n          onClick: () => handleDocumentSelect(doc),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Description, {\n              color: selectedDocs.some(d => d.id === doc.id) ? 'primary' : 'inherit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: doc.filename,\n            primaryTypographyProps: {\n              noWrap: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: e => {\n              e.stopPropagation();\n              handleDelete(doc);\n            },\n            children: /*#__PURE__*/_jsxDEV(Delete, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 0,\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: currentChatId ? 'Current Chat' : 'New Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 1,\n          mt: 1,\n          children: selectedDocs.map(doc => /*#__PURE__*/_jsxDEV(Chip, {\n            label: doc.filename,\n            onDelete: () => handleDocumentSelect(doc),\n            size: \"small\"\n          }, doc.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }, this), chatHistory.map((message, index) => renderMessage(message, index))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: selectedDocs.length ? \"Ask a question...\" : \"Select documents to start\",\n            disabled: !selectedDocs.length || loading,\n            variant: \"outlined\",\n            size: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 24\n            }, this),\n            disabled: !query.trim() || !selectedDocs.length || loading,\n            onClick: handleQuerySubmit,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8AbIHHE78fwqZlOevluO4OZZOeA=\", false, function () {\n  return [useTheme];\n});\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledDrawer\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"ChatContainer\");\n$RefreshReg$(_c4, \"MessageBubble\");\n$RefreshReg$(_c5, \"InputContainer\");\n$RefreshReg$(_c6, \"FileInput\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","pdfjsLib","getDocument","GlobalWorkerOptions","workerSrc","Box","Drawer","AppBar","Toolbar","Typography","Divider","List","ListItem","ListItemIcon","ListItemText","Button","TextField","Paper","IconButton","Chip","CircularProgress","Container","Card","CardContent","LinearProgress","useTheme","AddCircleOutline","Delete","Send","UploadFile","Description","Chat","ChatIcon","ExpandMore","ExpandLess","Launch","styled","jsxDEV","_jsxDEV","drawerWidth","StyledDrawer","theme","width","flexShrink","boxSizing","_c","Main","flexGrow","padding","spacing","marginLeft","height","display","flexDirection","_c2","ChatContainer","overflowY","marginBottom","_c3","MessageBubble","variant","maxWidth","backgroundColor","palette","primary","main","grey","color","contrastText","alignSelf","borderRadius","_c4","InputContainer","background","paper","borderTop","divider","_c5","FileInput","_c6","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","currentChatId","setCurrentChatId","allChats","setAllChats","latestMessageRef","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","handleFileChange","event","files","Array","from","target","filter","file","isValidType","type","isValidSize","size","alert","name","handleDocumentSelect","doc","prev","isSelected","some","d","id","renderMessage","message","index","ref","length","gap","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","response","context","mt","map","ctx","idx","sx","content","endIcon","onClick","openPdfPage","file_url","page_number","fetchInitialData","Promise","all","fetchDocuments","fetchChats","current","scrollIntoView","behavior","data","error","select","order","ascending","console","handleUpload","uploadData","uploadError","storage","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","filename","total_pages","single","fullText","i","page","getPage","textContent","getTextContent","pageText","items","item","str","join","push","text","pageNumber","fetch","method","headers","Authorization","body","JSON","stringify","documentId","pages","ok","errorText","Error","handleDelete","split","pop","storageError","remove","deleteError","delete","eq","handleQuerySubmit","trim","chatId","documentIds","newChat","chatError","title","document_ids","result","json","messageError","chat_id","answer","fetchChatMessages","_chatData$document_id","chatData","docsData","docsError","in","messages","messagesError","handleNewChat","url","signedUrlData","createSignedUrl","signedUrl","parseInt","viewerUrl","encodeURIComponent","window","open","noWrap","p","htmlFor","accept","multiple","onChange","disabled","component","startIcon","fullWidth","mb","button","selected","primaryTypographyProps","e","stopPropagation","fontSize","label","onDelete","value","placeholder","_c7","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\n\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs';\nimport {\n  Box,\n  Drawer,\n  AppBar,\n  Toolbar,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n  Chip,\n  CircularProgress,\n  Container,\n  Card,\n  CardContent,\n  LinearProgress,\n  useTheme\n} from '@mui/material';\nimport {\n  AddCircleOutline,\n  Delete,\n  Send,\n  UploadFile,\n  Description,\n  Chat as ChatIcon,\n  ExpandMore,\n  ExpandLess,\n  Launch\n} from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\n\nconst drawerWidth = 320;\n\n// Styled components\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  '& .MuiDrawer-paper': {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n  },\n}));\n\nconst Main = styled('main')(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  marginLeft: drawerWidth,\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageBubble = styled(Paper)(({ theme, variant }) => ({\n  padding: theme.spacing(2),\n  maxWidth: '70%',\n  marginBottom: theme.spacing(2),\n  backgroundColor: variant === 'user' ? theme.palette.primary.main : theme.palette.grey[50],\n  color: variant === 'user' ? theme.palette.primary.contrastText : 'inherit',\n  alignSelf: variant === 'user' ? 'flex-end' : 'flex-start',\n  borderRadius: theme.spacing(2),\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderTop: `1px solid ${theme.palette.divider}`,\n}));\n\nconst FileInput = styled('input')({\n  display: 'none',\n});\n\nfunction App() {\n  const theme = useTheme();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const latestMessageRef = useRef(null);\n\n  // Supabase client setup\n  const supabase = createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_ANON_KEY\n  );\n\n  // File handling functions\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024;\n      \n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      \n      return isValidType && isValidSize;\n    });\n    \n    setSelectedFiles(files);\n  };\n\n  // Document selection handler\n  const handleDocumentSelect = (doc) => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      return isSelected ? prev.filter(d => d.id !== doc.id) : [...prev, doc];\n    });\n  };\n\n  // Chat message rendering\n  const renderMessage = (message, index) => (\n    <Box\n      key={index}\n      ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n      display=\"flex\"\n      flexDirection=\"column\"\n      gap={2}\n    >\n      <MessageBubble variant=\"user\" elevation={1}>\n        <Typography>{message.query}</Typography>\n      </MessageBubble>\n      <MessageBubble elevation={1}>\n        <Typography\n          dangerouslySetInnerHTML={{ __html: message.response }}\n        />\n        {message.context && (\n          <Box mt={2}>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Source References:\n            </Typography>\n            {message.context.map((ctx, idx) => (\n              <Card variant=\"outlined\" sx={{ mt: 1 }} key={idx}>\n                <CardContent>\n                  <Typography variant=\"body2\">\n                    {ctx.content}\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    endIcon={<Launch />}\n                    onClick={() => openPdfPage(ctx.file_url, ctx.page_number)}\n                  >\n                    Page {ctx.page_number}\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </Box>\n        )}\n      </MessageBubble>\n    </Box>\n  );\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []);\n\n  // Scroll to latest message\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatHistory]);\n\n  // Fetch documents\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('documents')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  // Fetch all chats\n  const fetchChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const { data: { publicUrl } } = supabase.storage\n          .from(\"pdfs\")\n          .getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle document deletion\n  const handleDelete = async (doc) => {\n    try {\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  // Handle query submission\n  const handleQuerySubmit = async () => {\n    if (!query?.trim()) {\n      alert('Please enter a query');\n      return;\n    }\n\n    if (!currentChatId && !selectedDocs?.length) {\n      alert('Please select at least one document to start a chat');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      let chatId = currentChatId;\n      let documentIds = selectedDocs.map(doc => doc.id);\n\n      if (!chatId) {\n        const { data: newChat, error: chatError } = await supabase\n          .from('chats')\n          .insert({\n            title: query.trim(),\n            document_ids: documentIds\n          })\n          .select()\n          .single();\n\n        if (chatError) throw chatError;\n\n        chatId = newChat.id;\n        setCurrentChatId(chatId);\n      }\n\n      const response = await fetch(\n        `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n          },\n          body: JSON.stringify({\n            query: query.trim(),\n            documentIds\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n\n      const result = await response.json();\n\n      const { error: messageError } = await supabase\n        .from(\"chat_messages\")\n        .insert({\n          chat_id: chatId,\n          query: query.trim(),\n          response: result.answer,\n          context: result.context || null,\n          document_ids: documentIds,\n          type: 'conversation'\n        });\n\n      if (messageError) throw messageError;\n\n      fetchChatMessages(chatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch chat messages\n  const fetchChatMessages = async (chatId) => {\n    if (!chatId) return;\n    \n    setLoading(true);\n    try {\n      const { data: chatData, error: chatError } = await supabase\n        .from(\"chats\")\n        .select(\"*\")\n        .eq(\"id\", chatId)\n        .single();\n\n      if (chatError) throw chatError;\n\n      if (chatData.document_ids?.length > 0) {\n        const { data: docsData, error: docsError } = await supabase\n          .from(\"documents\")\n          .select(\"*\")\n          .in(\"id\", chatData.document_ids);\n\n        if (docsError) throw docsError;\n        setSelectedDocs(docsData || []);\n      }\n\n      const { data: messages, error: messagesError } = await supabase\n        .from(\"chat_messages\")\n        .select(\"*\")\n        .eq(\"chat_id\", chatId)\n        .order(\"created_at\", { ascending: true });\n\n      if (messagesError) throw messagesError;\n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle new chat creation\n  const handleNewChat = () => {\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Open PDF viewer\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        const page = parseInt(pageNumber, 10) || 1;\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <StyledDrawer variant=\"permanent\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            PDF Chat Assistant\n          </Typography>\n        </Toolbar>\n        <Divider />\n        \n        {/* File Upload Section */}\n        <Box p={2}>\n          <label htmlFor=\"file-input\">\n            <FileInput\n              id=\"file-input\"\n              type=\"file\"\n              accept=\".pdf\"\n              multiple\n              onChange={handleFileChange}\n              disabled={loading}\n            />\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              startIcon={<UploadFile />}\n              fullWidth\n              sx={{ mb: 2 }}\n            >\n              Choose Files\n            </Button>\n          </label>\n          \n          <Button\n            variant=\"contained\"\n            fullWidth\n            disabled={!selectedFiles.length || loading}\n            onClick={handleUpload}\n          >\n            Upload {selectedFiles.length ? `(${selectedFiles.length})` : ''}\n          </Button>\n        </Box>\n        \n        <Divider />\n        \n        {/* Documents List */}\n        <List>\n          {documents.map((doc) => (\n            <ListItem\n              key={doc.id}\n              button\n              selected={selectedDocs.some(d => d.id === doc.id)}\n              onClick={() => handleDocumentSelect(doc)}\n            >\n              <ListItemIcon>\n                <Description color={selectedDocs.some(d => d.id === doc.id) ? 'primary' : 'inherit'} />\n              </ListItemIcon>\n              <ListItemText \n                primary={doc.filename}\n                primaryTypographyProps={{ noWrap: true }}\n              />\n              <IconButton\n                size=\"small\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleDelete(doc);\n                }}\n              >\n                <Delete fontSize=\"small\" />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </StyledDrawer>\n\n      <Main>\n        {/* Chat Header */}\n        <Paper elevation={0} sx={{ mb: 2, p: 2 }}>\n          <Typography variant=\"h6\">\n            {currentChatId ? 'Current Chat' : 'New Chat'}\n          </Typography>\n          <Box display=\"flex\" gap={1} mt={1}>\n            {selectedDocs.map(doc => (\n              <Chip\n                key={doc.id}\n                label={doc.filename}\n                onDelete={() => handleDocumentSelect(doc)}\n                size=\"small\"\n              />\n            ))}\n          </Box>\n        </Paper>\n\n        {/* Chat Messages */}\n        <ChatContainer>\n          {loading && <LinearProgress />}\n          {chatHistory.map((message, index) => renderMessage(message, index))}\n        </ChatContainer>\n\n        {/* Input Area */}\n        <InputContainer>\n          <Box display=\"flex\" gap={2}>\n            <TextField\n              fullWidth\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder={selectedDocs.length ? \"Ask a question...\" : \"Select documents to start\"}\n              disabled={!selectedDocs.length || loading}\n              variant=\"outlined\"\n              size=\"medium\"\n            />\n            <Button\n              variant=\"contained\"\n              endIcon={<Send />}\n              disabled={!query.trim() || !selectedDocs.length || loading}\n              onClick={handleQuerySubmit}\n            >\n              Send\n            </Button>\n          </Box>\n        </InputContainer>\n      </Main>\n    </Box>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}