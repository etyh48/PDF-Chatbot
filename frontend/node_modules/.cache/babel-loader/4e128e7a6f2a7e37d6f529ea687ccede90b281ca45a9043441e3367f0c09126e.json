{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/components/MessageFormatter.js\";\nimport React from 'react';\n// Add these styles to your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = `\n.message-content {\n  font-size: 1rem;\n  line-height: 1.5;\n}\n\n.message-content h1, .message-content h2, .message-content h3,\n.message-content h4, .message-content h5, .message-content h6 {\n  margin-top: 1.5em;\n  margin-bottom: 0.5em;\n  font-weight: 600;\n}\n\n.message-content ul, .message-content ol {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.message-content li {\n  margin-bottom: 0.25em;\n}\n\n.message-content code {\n  background-color: #f0f0f0;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n}\n`;\nconst MessageFormatter = ({\n  content,\n  context,\n  selectedDocs,\n  openPdfPage\n}) => {\n  const truncateContext = (text, maxLength = 200) => {\n    if (!text) return \"\";\n    if (text.length <= maxLength) return text;\n    const truncated = text.substring(0, maxLength);\n    const lastPeriod = truncated.lastIndexOf(\".\");\n    const lastQuestion = truncated.lastIndexOf(\"?\");\n    const lastExclamation = truncated.lastIndexOf(\"!\");\n    const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n    if (lastSentenceEnd > 0) {\n      return text.substring(0, lastSentenceEnd + 1) + \"...\";\n    }\n    const lastSpace = truncated.lastIndexOf(\" \");\n    return text.substring(0, lastSpace) + \"...\";\n  };\n  const formatText = text => {\n    if (!text) return '';\n\n    // Handle different types of emphasis/formatting\n    let formattedText = text\n    // Bold text (both ** and __ syntax)\n    .replace(/(\\*\\*|__)(.*?)\\1/g, '<strong>$2</strong>')\n    // Italic text (both * and _ syntax)\n    .replace(/(\\*|_)(.*?)\\1/g, '<em>$2</em>')\n    // Headers\n    .replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n      const level = hashes.length;\n      return `<h${level} class=\"text-${getHeaderSize(level)} font-bold my-2\">${content}</h${level}>`;\n    })\n    // Number formatting\n    .replace(/(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g, '<span class=\"font-mono\">$1</span>');\n    return formattedText;\n  };\n  const getHeaderSize = level => {\n    const sizes = {\n      1: 'xl',\n      2: 'lg',\n      3: 'base',\n      4: 'sm',\n      5: 'xs',\n      6: 'xs'\n    };\n    return sizes[level] || 'base';\n  };\n  const formatSection = section => {\n    // Check if section is a list\n    if (section.includes('* ') || section.includes('• ')) {\n      const items = section.split(/(?:\\* |• )/).filter(item => item.trim()).map(item => formatText(item.trim()));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-6 space-y-2\",\n        children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-2\",\n          dangerouslySetInnerHTML: {\n            __html: item\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    }\n\n    // Handle sections starting with **Section Name:**\n    const sectionTitleMatch = section.match(/^\\*\\*(.*?)\\*\\*:/);\n    if (sectionTitleMatch) {\n      const [fullMatch, title] = sectionTitleMatch;\n      const content = section.slice(fullMatch.length).trim();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold mb-2\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: formatText(content)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this);\n    }\n\n    // Regular paragraph\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4\",\n      dangerouslySetInnerHTML: {\n        __html: formatText(section)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this);\n  };\n  const sections = content.split('\\n\\n').filter(section => section.trim());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-content\",\n    children: [sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: formatSection(section)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this)), context && context.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-info mt-6 bg-gray-50 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-semibold text-gray-600 mb-3\",\n        children: \"Relevant Source Excerpts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: context.map((ctx, idx) => {\n          const relatedDoc = selectedDocs.find(d => d.id === ctx.documentId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-3 rounded-md shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: [\"From: \", (relatedDoc === null || relatedDoc === void 0 ? void 0 : relatedDoc.filename) || `Document ${ctx.documentId}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm\",\n                  children: truncateContext(ctx.content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-3 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded\",\n                onClick: () => openPdfPage(relatedDoc === null || relatedDoc === void 0 ? void 0 : relatedDoc.file_url, ctx.page_number),\n                children: [\"Page \", ctx.page_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 7\n  }, this);\n};\n_c = MessageFormatter;\nexport default MessageFormatter;\nvar _c;\n$RefreshReg$(_c, \"MessageFormatter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","styles","MessageFormatter","content","context","selectedDocs","openPdfPage","truncateContext","text","maxLength","length","truncated","substring","lastPeriod","lastIndexOf","lastQuestion","lastExclamation","lastSentenceEnd","Math","max","lastSpace","formatText","formattedText","replace","match","hashes","level","getHeaderSize","sizes","formatSection","section","includes","items","split","filter","item","trim","map","className","children","idx","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","sectionTitleMatch","fullMatch","title","slice","sections","ctx","relatedDoc","find","d","id","documentId","filename","onClick","file_url","page_number","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/components/MessageFormatter.js"],"sourcesContent":["import React from 'react';\n// Add these styles to your CSS file\nconst styles = `\n.message-content {\n  font-size: 1rem;\n  line-height: 1.5;\n}\n\n.message-content h1, .message-content h2, .message-content h3,\n.message-content h4, .message-content h5, .message-content h6 {\n  margin-top: 1.5em;\n  margin-bottom: 0.5em;\n  font-weight: 600;\n}\n\n.message-content ul, .message-content ol {\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.message-content li {\n  margin-bottom: 0.25em;\n}\n\n.message-content code {\n  background-color: #f0f0f0;\n  padding: 0.2em 0.4em;\n  border-radius: 3px;\n  font-family: monospace;\n}\n`;\n\nconst MessageFormatter = ({ content, context, selectedDocs, openPdfPage }) => {\n    const truncateContext = (text, maxLength = 200) => {\n      if (!text) return \"\";\n      if (text.length <= maxLength) return text;\n      \n      const truncated = text.substring(0, maxLength);\n      const lastPeriod = truncated.lastIndexOf(\".\");\n      const lastQuestion = truncated.lastIndexOf(\"?\");\n      const lastExclamation = truncated.lastIndexOf(\"!\");\n      \n      const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n      \n      if (lastSentenceEnd > 0) {\n        return text.substring(0, lastSentenceEnd + 1) + \"...\";\n      }\n      \n      const lastSpace = truncated.lastIndexOf(\" \");\n      return text.substring(0, lastSpace) + \"...\";\n    };\n    const formatText = (text) => {\n      if (!text) return '';\n      \n      // Handle different types of emphasis/formatting\n      let formattedText = text\n        // Bold text (both ** and __ syntax)\n        .replace(/(\\*\\*|__)(.*?)\\1/g, '<strong>$2</strong>')\n        // Italic text (both * and _ syntax)\n        .replace(/(\\*|_)(.*?)\\1/g, '<em>$2</em>')\n        // Headers\n        .replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n          const level = hashes.length;\n          return `<h${level} class=\"text-${getHeaderSize(level)} font-bold my-2\">${content}</h${level}>`;\n        })\n        // Number formatting\n        .replace(/(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g, \n          '<span class=\"font-mono\">$1</span>');\n  \n      return formattedText;\n    };\n  \n    const getHeaderSize = (level) => {\n      const sizes = {\n        1: 'xl',\n        2: 'lg',\n        3: 'base',\n        4: 'sm',\n        5: 'xs',\n        6: 'xs'\n      };\n      return sizes[level] || 'base';\n    };\n  \n    const formatSection = (section) => {\n      // Check if section is a list\n      if (section.includes('* ') || section.includes('• ')) {\n        const items = section\n          .split(/(?:\\* |• )/)\n          .filter(item => item.trim())\n          .map(item => formatText(item.trim()));\n        \n        return (\n          <ul className=\"list-disc pl-6 space-y-2\">\n            {items.map((item, idx) => (\n              <li \n                key={idx} \n                className=\"mb-2\"\n                dangerouslySetInnerHTML={{ __html: item }}\n              />\n            ))}\n          </ul>\n        );\n      }\n  \n      // Handle sections starting with **Section Name:**\n      const sectionTitleMatch = section.match(/^\\*\\*(.*?)\\*\\*:/);\n      if (sectionTitleMatch) {\n        const [fullMatch, title] = sectionTitleMatch;\n        const content = section.slice(fullMatch.length).trim();\n        return (\n          <div className=\"mb-4\">\n            <h3 className=\"font-bold mb-2\">{title}</h3>\n            <div dangerouslySetInnerHTML={{ __html: formatText(content) }} />\n          </div>\n        );\n      }\n  \n      // Regular paragraph\n      return (\n        <p \n          className=\"mb-4\"\n          dangerouslySetInnerHTML={{ __html: formatText(section) }}\n        />\n      );\n    };\n  \n    const sections = content\n      .split('\\n\\n')\n      .filter(section => section.trim());\n  \n    return (\n      <div className=\"message-content\">\n        {sections.map((section, idx) => (\n          <div key={idx} className=\"mb-4\">\n            {formatSection(section)}\n          </div>\n        ))}\n        \n        {context && context.length > 0 && (\n          <div className=\"context-info mt-6 bg-gray-50 p-4 rounded-lg\">\n            <h4 className=\"text-sm font-semibold text-gray-600 mb-3\">Relevant Source Excerpts:</h4>\n            <div className=\"space-y-3\">\n              {context.map((ctx, idx) => {\n                const relatedDoc = selectedDocs.find(d => d.id === ctx.documentId);\n                return (\n                  <div key={idx} className=\"bg-white p-3 rounded-md shadow-sm\">\n                    <div className=\"flex justify-between items-start gap-4\">\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm text-gray-500 mb-1\">\n                          From: {relatedDoc?.filename || `Document ${ctx.documentId}`}\n                        </p>\n                        <p className=\"text-sm\">{truncateContext(ctx.content)}</p>\n                      </div>\n                      <button\n                        className=\"px-3 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded\"\n                        onClick={() => openPdfPage(relatedDoc?.file_url, ctx.page_number)}\n                      >\n                        Page {ctx.page_number}\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  export default MessageFormatter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}