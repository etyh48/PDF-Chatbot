{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport PDFViewer from './components/PDFViewer';\n// At the top of App.js, add this import:\nimport { FaUpload } from 'react-icons/fa';\nimport { FaFilePdf } from 'react-icons/fa';\nimport { FaTrash } from 'react-icons/fa';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from('chat_history').delete().eq('document_id', selectedDoc.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error('Error clearing chat:', error);\n      alert('Error clearing chat history');\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from('pdfs').createSignedUrl(url.split('/').pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log('Opening PDF:', {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Error opening PDF:', error);\n      alert('Error opening PDF');\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async documentId => {\n    setIsHistoryLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chat_history').select('*').eq('document_id', documentId).order('created_at', {\n        ascending: true\n      });\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n  const handleDocumentSelect = async doc => {\n    setSelectedDoc(doc);\n    await fetchChatHistory(doc.id);\n  };\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split('/').pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from('pdfs').remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from('documents').delete().eq('id', doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error('Delete error:', error);\n      alert('Error deleting document');\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    const {\n      data\n    } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  const BATCH_SIZE = 20; // Reduce to 20 pages per batch\n  const RETRY_DELAY = 3000; // 3 seconds between retries\n  const MAX_RETRIES = 3;\n\n  // Helper function to delay execution\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  // Helper function to process batch with retries\n  const processBatchWithRetry = async (documentId, pages, fileName, retryCount = 0) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          documentId,\n          pages\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      return await response.json();\n    } catch (error) {\n      if (retryCount < MAX_RETRIES) {\n        console.log(`Retry ${retryCount + 1} for batch in ${fileName}`);\n        await delay(RETRY_DELAY);\n        return processBatchWithRetry(documentId, pages, fileName, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        // Upload to storage first\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from('pdfs').upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('pdfs').getPublicUrl(uploadData.path);\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from('documents').insert({\n          filename: file.name,\n          file_url: publicUrl\n        }).select().single();\n        if (docError) throw docError;\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Process pages in smaller batches\n        for (let i = 1; i <= totalPages; i += BATCH_SIZE) {\n          const endPage = Math.min(i + BATCH_SIZE - 1, totalPages);\n          const batchPages = [];\n          for (let pageNum = i; pageNum <= endPage; pageNum++) {\n            const page = await pdf.getPage(pageNum);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map(item => item.str).join(' ');\n            batchPages.push({\n              text: pageText,\n              pageNumber: pageNum\n            });\n            setUploadProgress(prev => ({\n              ...prev,\n              [file.name]: pageNum / totalPages * 100\n            }));\n          }\n          try {\n            await processBatchWithRetry(docData.id, batchPages, file.name);\n            // Add delay between batches to prevent overload\n            await delay(1000);\n          } catch (batchError) {\n            console.error(`Error processing batch pages ${i}-${endPage}:`, batchError);\n            throw new Error(`Failed to process pages ${i}-${endPage} of ${file.name}: ${batchError.message}`);\n          }\n        }\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Error uploading files: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  const handleQuerySubmit = async e => {\n    e.preventDefault();\n    if (!query.trim() || !selectedDoc) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id,\n          chatHistory: chatHistory\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error('Failed to process query: ' + errorText);\n      }\n      const result = await response.json();\n\n      // Create new chat entry\n      const newEntry = {\n        document_id: selectedDoc.id,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context\n      };\n\n      // Store in database\n      const {\n        error: insertError\n      } = await supabase.from('chat_history').insert(newEntry);\n      if (insertError) throw insertError;\n\n      // Update local state\n      await fetchChatHistory(selectedDoc.id);\n      setQuery('');\n    } catch (error) {\n      console.error('Query error:', error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 19\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 13\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: '150px'\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"documents-list p-3\",\n          children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${(selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id) === doc.id ? 'selected' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n              onClick: () => handleDocumentSelect(doc),\n              children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-truncate\",\n                children: doc.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link text-danger p-1 delete-btn\",\n              onClick: () => handleDelete(doc),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedDoc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Chat About: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: selectedDoc.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 23\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Select a document to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message ai-message align-self-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 rounded-3\",\n                  children: [chat.response, chat.context && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"context-info mt-3 pt-3 border-top\",\n                    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: \"Source Context:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"context-content mt-2\",\n                      children: chat.context.slice(0, 10).map((ctx, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded border mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mb-0 small\",\n                          children: ctx.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 523,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-outline-primary btn-sm page-link\",\n                          onClick: () => openPdfPage(selectedDoc.file_url, ctx.page_number),\n                          children: [\"Page \", ctx.page_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 524,\n                          columnNumber: 35\n                        }, this)]\n                      }, idx, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4  border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleQuerySubmit,\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDoc ? \"Ask a question...\" : \"Select a document first\",\n              disabled: !selectedDoc || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: !selectedDoc || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }, this), pdfViewerState.isOpen && /*#__PURE__*/_jsxDEV(PDFViewer, {\n      url: pdfViewerState.url,\n      pageNumber: pdfViewerState.pageNumber,\n      onClose: closePdfViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"JIJnXWiTE6Tk16kLYkEHgu6bfNI=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","pdfjsLib","getDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","current","scrollIntoView","behavior","fetchChatHistory","id","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","openPdfPage","data","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","documentId","select","order","ascending","handleDocumentSelect","doc","handleDelete","filename","file_url","storageError","remove","deleteError","fetchDocuments","handleFileChange","event","files","Array","target","filter","file","isValidType","type","isValidSize","size","name","BATCH_SIZE","RETRY_DELAY","MAX_RETRIES","delay","ms","Promise","resolve","setTimeout","processBatchWithRetry","pages","fileName","retryCount","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","json","handleUpload","length","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","docData","docError","insert","single","arrayBuffer","pdf","promise","totalPages","numPages","i","endPage","Math","min","batchPages","pageNum","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","prev","batchError","message","handleQuerySubmit","e","preventDefault","trim","result","newEntry","document_id","answer","context","insertError","className","children","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","chat","ref","slice","ctx","idx","content","page_number","onSubmit","value","placeholder","onClose","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport PDFViewer from './components/PDFViewer';\n// At the top of App.js, add this import:\nimport { FaUpload } from 'react-icons/fa';\nimport { FaFilePdf } from 'react-icons/fa';\nimport { FaTrash } from 'react-icons/fa';\n\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\"; \n\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    \n    try {\n      // Delete from database\n      const { error } = await supabase\n        .from('chat_history')\n        .delete()\n        .eq('document_id', selectedDoc.id);\n  \n      if (error) throw error;\n  \n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error('Error clearing chat:', error);\n      alert('Error clearing chat history');\n    }\n  };\n\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n  \n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase\n        .storage\n        .from('pdfs')\n        .createSignedUrl(url.split('/').pop(), 3600);\n  \n      if (error) throw error;\n  \n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n        \n        // Log for debugging\n        console.log('Opening PDF:', {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n  \n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Error opening PDF:', error);\n      alert('Error opening PDF');\n    }\n  };\n\n  \n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async (documentId) => {\n  setIsHistoryLoading(true);\n  try {\n    const { data, error } = await supabase\n      .from('chat_history')\n      .select('*')\n      .eq('document_id', documentId)\n      .order('created_at', { ascending: true });\n\n    if (error) throw error;\n    setChatHistory(data || []);\n  } catch (error) {\n    console.error('Error fetching chat history:', error);\n  } finally {\n    setIsHistoryLoading(false);\n  }\n};\n\n  const handleDocumentSelect = async (doc) => {\n  setSelectedDoc(doc);\n  await fetchChatHistory(doc.id);\n};\n\n  \nconst handleDelete = async (doc) => {\n  try {\n    // Delete from storage first\n    const filename = doc.file_url.split('/').pop();\n    const { error: storageError } = await supabase.storage\n      .from('pdfs')\n      .remove([filename]);\n\n    if (storageError) throw storageError;\n\n    // Delete document (will cascade delete chunks)\n    const { error: deleteError } = await supabase\n      .from('documents')\n      .delete()\n      .eq('id', doc.id);\n\n    if (deleteError) throw deleteError;\n\n    // Refresh documents list\n    fetchDocuments();\n  } catch (error) {\n    console.error('Delete error:', error);\n    alert('Error deleting document');\n  }\n};\n\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    const { data } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n      \n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      \n      return isValidType && isValidSize;\n    });\n  \n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  const BATCH_SIZE = 20; // Reduce to 20 pages per batch\nconst RETRY_DELAY = 3000; // 3 seconds between retries\nconst MAX_RETRIES = 3;\n\n// Helper function to delay execution\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Helper function to process batch with retries\nconst processBatchWithRetry = async (documentId, pages, fileName, retryCount = 0) => {\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          documentId,\n          pages\n        })\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (retryCount < MAX_RETRIES) {\n      console.log(`Retry ${retryCount + 1} for batch in ${fileName}`);\n      await delay(RETRY_DELAY);\n      return processBatchWithRetry(documentId, pages, fileName, retryCount + 1);\n    }\n    throw error;\n  }\n};\n\nconst handleUpload = async () => {\n  if (!selectedFiles.length) return;\n\n  setLoading(true);\n  try {\n    for (const file of selectedFiles) {\n      // Upload to storage first\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('pdfs')\n        .upload(`${Date.now()}_${file.name}`, file);\n\n      if (uploadError) throw uploadError;\n\n      const { data: { publicUrl } } = supabase.storage\n        .from('pdfs')\n        .getPublicUrl(uploadData.path);\n\n      const { data: docData, error: docError } = await supabase\n        .from('documents')\n        .insert({\n          filename: file.name,\n          file_url: publicUrl\n        })\n        .select()\n        .single();\n\n      if (docError) throw docError;\n\n      const arrayBuffer = await file.arrayBuffer();\n      const pdf = await getDocument({ data: arrayBuffer }).promise;\n      const totalPages = pdf.numPages;\n\n      // Process pages in smaller batches\n      for (let i = 1; i <= totalPages; i += BATCH_SIZE) {\n        const endPage = Math.min(i + BATCH_SIZE - 1, totalPages);\n        const batchPages = [];\n        \n        for (let pageNum = i; pageNum <= endPage; pageNum++) {\n          const page = await pdf.getPage(pageNum);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(' ');\n          \n          batchPages.push({\n            text: pageText,\n            pageNumber: pageNum\n          });\n\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: (pageNum / totalPages) * 100\n          }));\n        }\n\n        try {\n          await processBatchWithRetry(docData.id, batchPages, file.name);\n          // Add delay between batches to prevent overload\n          await delay(1000);\n        } catch (batchError) {\n          console.error(`Error processing batch pages ${i}-${endPage}:`, batchError);\n          throw new Error(`Failed to process pages ${i}-${endPage} of ${file.name}: ${batchError.message}`);\n        }\n      }\n\n      setUploadProgress(prev => ({ ...prev, [file.name]: 100 }));\n    }\n\n    setSelectedFiles([]);\n    setUploadProgress({});\n    fetchDocuments();\n  } catch (error) {\n    console.error('Upload error:', error);\n    alert('Error uploading files: ' + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  \n\n\n\n  // Modify handleQuerySubmit to store chat history\n  const handleQuerySubmit = async (e) => {\n  e.preventDefault();\n  if (!query.trim() || !selectedDoc) return;\n\n  setLoading(true);\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id,\n          chatHistory: chatHistory\n        })\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error('Failed to process query: ' + errorText);\n    }\n\n    const result = await response.json();\n    \n    // Create new chat entry\n    const newEntry = {\n      document_id: selectedDoc.id,\n      query: query.trim(),\n      response: result.answer,\n      context: result.context\n    };\n\n    // Store in database\n    const { error: insertError } = await supabase\n      .from('chat_history')\n      .insert(newEntry);\n\n    if (insertError) throw insertError;\n\n    // Update local state\n    await fetchChatHistory(selectedDoc.id);\n    setQuery('');\n  } catch (error) {\n    console.error('Query error:', error);\n    alert(error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  \n\nreturn (\n  <div className=\"container-fluid vh-100\">\n    <div className=\"row h-100\">\n      {/* Sidebar */}\n      <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n        <div className=\"sticky-top\">\n          <div className=\"p-4 border-bottom\">\n            <h5 className=\"mb-3\">PDF Documents</h5>\n            <div className=\"d-flex gap-2 mb-3\">\n              <div className=\"upload-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf\"\n                  multiple\n                  onChange={handleFileChange}\n                  className=\"d-none\"\n                  id=\"fileInput\"\n                  disabled={loading}\n                />\n                <label htmlFor=\"fileInput\" className=\"btn btn-outline-primary d-flex align-items-center gap-2\">\n                  <FaUpload />\n                  Choose Files\n                </label>\n              </div>\n              <button \n                className=\"btn btn-primary\"\n                onClick={handleUpload}\n                disabled={!selectedFiles.length || loading}\n              >\n                Upload {selectedFiles.length ? `(${selectedFiles.length})` : ''}\n              </button>\n            </div>\n\n            {/* Selected Files List */}\n            {selectedFiles.length > 0 && (\n              <div className=\"selected-files mb-3\">\n                {Array.from(selectedFiles).map((file, index) => (\n                  <div key={index} className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\">\n                    <div className=\"d-flex align-items-center\">\n                      <FaFilePdf className=\"text-primary me-2\" />\n                      <span className=\"text-truncate\" style={{ maxWidth: '150px' }}>{file.name}</span>\n                    </div>\n                    <button \n                      className=\"btn btn-link text-danger p-1\"\n                      onClick={() => {\n                        const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                        setSelectedFiles(newFiles);\n                      }}\n                    >\n                      <FaTrash size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Upload Progress */}\n            {Object.entries(uploadProgress).map(([filename, progress]) => (\n              <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                <div className=\"small text-muted mb-1\">{filename}</div>\n                <div className=\"progress\" style={{ height: '4px' }}>\n                  <div \n                    className=\"progress-bar\" \n                    role=\"progressbar\" \n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n\n          {/* Documents List */}\n          <div className=\"documents-list p-3\">\n            {documents.map(doc => (\n              <div\n                key={doc.id}\n                className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                  selectedDoc?.id === doc.id ? 'selected' : ''\n                }`}\n              >\n                <div \n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n                <button \n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={() => handleDelete(doc)}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Main Chat Area */}\n        <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n          {/* Chat Header */}\n          <div className=\"chat-header p-4 bg-light border-bottom\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {selectedDoc ? (\n                <>\n                  <h6 className=\"mb-0\">Chat About: <br></br><i><strong>{selectedDoc.filename}</strong></i></h6>\n                  {chatHistory.length > 0 && (\n                    <button \n                      className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                      onClick={clearChat}\n                    >\n                      <FaTrash /> Clear Chat\n                    </button>\n                  )}\n                </>\n              ) : (\n                <h5 className=\"mb-0\">Select a document to start chatting</h5>\n              )}\n            </div>\n          </div>\n\n          {/* Chat Messages */}\n          <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n            {isHistoryLoading ? (\n              <div className=\"text-center text-muted\">Loading chat history...</div>\n            ) : (\n              <div className=\"d-flex flex-column gap-4\">\n                {chatHistory.map((chat, index) => (\n                  <div \n                    key={index} \n                    className=\"d-flex flex-column gap-3\"\n                    ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                  >\n                    {/* User Message */}\n                    <div className=\"message user-message align-self-end\">\n                      <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                        {chat.query}\n                      </div>\n                    </div>\n\n                    {/* AI Message */}\n                    <div className=\"message ai-message align-self-start\">\n                      <div className=\"message-content p-3 rounded-3\">\n                        {chat.response}\n                        \n                        {chat.context && (\n                          <div className=\"context-info mt-3 pt-3 border-top\">\n                            <small className=\"text-muted\">Source Context:</small>\n                            <div className=\"context-content mt-2\">\n                              {chat.context.slice(0, 10).map((ctx, idx) => (\n                                <div key={idx} className=\"d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded border mb-2\">\n                                  <p className=\"mb-0 small\">{ctx.content}</p>\n                                  <button\n                                    className=\"btn btn-outline-primary btn-sm page-link\"\n                                    onClick={() => openPdfPage(selectedDoc.file_url, ctx.page_number)}\n                                  >\n                                    Page {ctx.page_number}\n                                  </button>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Chat Input */}\n          <div className=\"chat-input p-4  border-top\">\n            <form onSubmit={handleQuerySubmit} className=\"d-flex gap-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder={selectedDoc ? \"Ask a question...\" : \"Select a document first\"}\n                disabled={!selectedDoc || loading}\n              />\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary px-4\"\n                disabled={!selectedDoc || loading || !query.trim()}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* PDF Viewer Modal */}\n      {pdfViewerState.isOpen && (\n        <PDFViewer \n          url={pdfViewerState.url}\n          pageNumber={pdfViewerState.pageNumber}\n          onClose={closePdfViewer}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}