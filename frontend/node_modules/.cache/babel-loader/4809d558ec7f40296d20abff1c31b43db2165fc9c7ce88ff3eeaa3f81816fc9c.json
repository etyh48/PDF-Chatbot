{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus } from \"react-icons/fa\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n  const renderChatMessage = chat => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message ai-message align-self-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content p-3 rounded-3\",\n      children: /*#__PURE__*/_jsxDEV(MessageFormatter, {\n        content: chat.response,\n        context: chat.context,\n        selectedDocs: selectedDocs,\n        openPdfPage: openPdfPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n\n  // Add these two new helper functions here:\n\n  const clearChat = async () => {\n    if (!selectedChat) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from(\"chats\").delete().eq(\"id\", selectedChat.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n      setSelectedChat(null);\n      await fetchChats(); // Refresh the chat list\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('documents').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChatSelect = async chat => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => documents.find(doc => doc.id === id)).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n\n  // Update the New Chat button handler\n  const handleNewChat = () => {\n    setSelectedChat(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setIsCreatingNewChat(true);\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n  {/* Update handleQuerySubmit to remove the event parameter */}\n  const handleQuerySubmit = async () => {\n    if (!query.trim() || selectedDocs.length === 0) return;\n    setLoading(true);\n    try {\n      const documentIds = selectedDocs.map(doc => doc.id);\n\n      // If no chat is selected, create a new one\n      let chatId = selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id;\n      if (!chatId) {\n        const {\n          data: newChat,\n          error: chatError\n        } = await supabase.from(\"chats\").insert({\n          title: query.trim().substring(0, 50),\n          // Use first query as title\n          first_query: query.trim(),\n          document_ids: documentIds\n        }).select().single();\n        if (chatError) throw chatError;\n        chatId = newChat.id;\n        setSelectedChat(newChat);\n        setIsCreatingNewChat(false);\n      }\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to process query\");\n      const result = await response.json();\n\n      // Store message in chat_messages\n      const {\n        error: messageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: chatId,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context\n      });\n      if (messageError) throw messageError;\n\n      // Refresh chat history\n      // After successful chat creation and message storage\n      await Promise.all([fetchChatHistory(chatId), fetchChats()]);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 19\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 13\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: \"150px\"\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: \"4px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\",\n              onClick: handleNewChat,\n              children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 15\n              }, this), \" New Chat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-list\",\n              children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat-item p-3 rounded mb-2 cursor-pointer ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? \"selected\" : \"\"}`,\n                onClick: () => handleChatSelect(chat),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaComments, {\n                    className: \"text-primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-preview\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-title text-truncate\",\n                      children: chat.title || truncateText(chat.first_query, 40)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: new Date(chat.created_at).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)\n              }, chat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [selectedChat.title || selectedChat.first_query, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: selectedDocs.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 19\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: isCreatingNewChat ? \"New Chat\" : \"Select or start a new chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), renderChatMessage(chat)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4 border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleQuerySubmit();\n            },\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length > 0 ? \"Ask a question about the selected documents...\" : \"Select at least one document first\",\n              disabled: selectedDocs.length === 0 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: selectedDocs.length === 0 || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"3bOKd12ogH9Mz40Yzq8qjRVgGbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","FaPlus","pdfjsLib","getDocument","MessageFormatter","ChatHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","chats","setChats","selectedChat","setSelectedChat","isCreatingNewChat","setIsCreatingNewChat","renderChatMessage","chat","className","children","content","response","context","openPdfPage","fileName","_jsxFileName","lineNumber","columnNumber","fetchInitialData","Promise","all","fetchDocuments","fetchChats","current","scrollIntoView","behavior","fetchChatHistory","id","handleDocumentSelect","doc","prev","isSelected","some","d","filter","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","data","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","select","order","ascending","handleDelete","filename","file_url","storageError","remove","deleteError","handleFileChange","event","files","Array","target","file","isValidType","type","isValidSize","size","name","handleUpload","length","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","single","fullText","i","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","text","fetch","method","headers","Authorization","body","JSON","stringify","documentId","pages","ok","errorText","Error","message","handleChatSelect","document_ids","find","Boolean","handleNewChat","handleQuerySubmit","trim","documentIds","chatId","newChat","chatError","title","substring","first_query","result","json","messageError","chat_id","answer","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","FaComments","truncateText","created_at","toLocaleDateString","ref","onSubmit","e","preventDefault","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus  } from \"react-icons/fa\";\n\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n\n  const renderChatMessage = (chat) => (\n    <div className=\"message ai-message align-self-start\">\n      <div className=\"message-content p-3 rounded-3\">\n        <MessageFormatter \n          content={chat.response}\n          context={chat.context}\n          selectedDocs={selectedDocs}\n          openPdfPage={openPdfPage}\n        />\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([\n        fetchDocuments(),\n        fetchChats()\n      ]);\n    };\n    \n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\nconst handleDocumentSelect = (doc) => {\n  setSelectedDocs(prev => {\n    const isSelected = prev.some(d => d.id === doc.id);\n    if (isSelected) {\n      return prev.filter(d => d.id !== doc.id);\n    } else {\n      return [...prev, doc];\n    }\n  });\n};\n\n\n  // Add these two new helper functions here:\n\n\n  const clearChat = async () => {\n  if (!selectedChat) return;\n\n  try {\n    // Delete from database\n    const { error } = await supabase\n      .from(\"chats\")\n      .delete()\n      .eq(\"id\", selectedChat.id);\n\n    if (error) throw error;\n\n    // Clear local state\n    setChatHistory([]);\n    setSelectedChat(null);\n    await fetchChats(); // Refresh the chat list\n\n  } catch (error) {\n    console.error(\"Error clearing chat:\", error);\n    alert(\"Error clearing chat history\");\n  }\n};\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null,\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page,\n        });\n\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null,\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('documents')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter((file) => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n\n      return isValidType && isValidSize;\n    });\n\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: { publicUrl },\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChatSelect = async (chat) => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => \n      documents.find(doc => doc.id === id)\n    ).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n  \n  // Update the New Chat button handler\n  const handleNewChat = () => {\n    setSelectedChat(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setIsCreatingNewChat(true);\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n{/* Update handleQuerySubmit to remove the event parameter */}\nconst handleQuerySubmit = async () => {\n  if (!query.trim() || selectedDocs.length === 0) return;\n\n  setLoading(true);\n  try {\n    const documentIds = selectedDocs.map(doc => doc.id);\n    \n    // If no chat is selected, create a new one\n    let chatId = selectedChat?.id;\n    if (!chatId) {\n      const { data: newChat, error: chatError } = await supabase\n        .from(\"chats\")\n        .insert({\n          title: query.trim().substring(0, 50), // Use first query as title\n          first_query: query.trim(),\n          document_ids: documentIds\n        })\n        .select()\n        .single();\n\n      if (chatError) throw chatError;\n      chatId = newChat.id;\n      setSelectedChat(newChat);\n      setIsCreatingNewChat(false);\n    }\n\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds,\n        }),\n      }\n    );\n\n    if (!response.ok) throw new Error(\"Failed to process query\");\n    \n    const result = await response.json();\n\n    // Store message in chat_messages\n    const { error: messageError } = await supabase\n      .from(\"chat_messages\")\n      .insert({\n        chat_id: chatId,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context\n      });\n\n    if (messageError) throw messageError;\n\n    // Refresh chat history\n    // After successful chat creation and message storage\n    await Promise.all([\n      fetchChatHistory(chatId),\n      fetchChats()\n    ]);\n    setQuery(\"\");\n  } catch (error) {\n    console.error(\"Query error:\", error);\n    alert(\"Error processing query: \" + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\nreturn (\n  <div className=\"container-fluid vh-100\">\n    <div className=\"row h-100\">\n      {/* Single Sidebar */}\n      <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n        <div className=\"sticky-top\">\n          {/* PDF Documents Section */}\n          <div className=\"p-4 border-bottom\">\n            <h5 className=\"mb-3\">PDF Documents</h5>\n            <div className=\"d-flex gap-2 mb-3\">\n              <div className=\"upload-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf\"\n                  multiple\n                  onChange={handleFileChange}\n                  className=\"d-none\"\n                  id=\"fileInput\"\n                  disabled={loading}\n                />\n                <label\n                  htmlFor=\"fileInput\"\n                  className=\"btn btn-outline-primary d-flex align-items-center gap-2\"\n                >\n                  <FaUpload />\n                  Choose Files\n                </label>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleUpload}\n                disabled={!selectedFiles.length || loading}\n              >\n                Upload {selectedFiles.length ? `(${selectedFiles.length})` : \"\"}\n              </button>\n            </div>\n\n            \n\n            {/* Selected Files List */}\n            {selectedFiles.length > 0 && (\n              <div className=\"selected-files mb-3\">\n                {Array.from(selectedFiles).map((file, index) => (\n                  <div\n                    key={index}\n                    className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\"\n                  >\n                    <div className=\"d-flex align-items-center\">\n                      <FaFilePdf className=\"text-primary me-2\" />\n                      <span className=\"text-truncate\" style={{ maxWidth: \"150px\" }}>\n                        {file.name}\n                      </span>\n                    </div>\n                    <button\n                      className=\"btn btn-link text-danger p-1\"\n                      onClick={() => {\n                        const newFiles = Array.from(selectedFiles).filter(\n                          (_, i) => i !== index\n                        );\n                        setSelectedFiles(newFiles);\n                      }}\n                    >\n                      <FaTrash size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Upload Progress */}\n            {Object.entries(uploadProgress).map(([filename, progress]) => (\n              <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                <div className=\"small text-muted mb-1\">{filename}</div>\n                <div className=\"progress\" style={{ height: \"4px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Chat History Section */}\n          <div className=\"p-4\">\n            <button \n              className=\"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\"\n              onClick={handleNewChat}\n            >\n              <FaPlus size={14} /> New Chat\n            </button>\n\n            <div className=\"chat-list\">\n              {chats.map((chat) => (\n                <div\n                  key={chat.id}\n                  className={`chat-item p-3 rounded mb-2 cursor-pointer ${\n                    selectedChat?.id === chat.id ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handleChatSelect(chat)}\n                >\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <FaComments className=\"text-primary\" />\n                    <div className=\"chat-preview\">\n                      <div className=\"chat-title text-truncate\">\n                        {chat.title || truncateText(chat.first_query, 40)}\n                      </div>\n                      <small className=\"text-muted\">\n                        {new Date(chat.created_at).toLocaleDateString()}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n        {/* Chat Header */}\n        <div className=\"chat-header p-4 bg-light border-bottom\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {selectedChat ? (\n              <>\n                <h6 className=\"mb-0\">\n                  {selectedChat.title || selectedChat.first_query}\n                  <br />\n                  <small className=\"text-muted\">\n                    {selectedDocs.map(doc => doc.filename).join(\", \")}\n                  </small>\n                </h6>\n                <button\n                  className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                  onClick={clearChat}\n                >\n                  <FaTrash /> Clear Chat\n                </button>\n              </>\n            ) : (\n              <h5 className=\"mb-0\">\n                {isCreatingNewChat ? \"New Chat\" : \"Select or start a new chat\"}\n              </h5>\n            )}\n          </div>\n        </div>\n\n        {/* Chat Messages */}\n        <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n          {isHistoryLoading ? (\n            <div className=\"text-center text-muted\">\n              Loading chat history...\n            </div>\n          ) : (\n            <div className=\"d-flex flex-column gap-4\">\n              {chatHistory.map((chat, index) => (\n                <div\n                  key={index}\n                  className=\"d-flex flex-column gap-3\"\n                  ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                >\n                  <div className=\"message user-message align-self-end\">\n                    <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                      {chat.query}\n                    </div>\n                  </div>\n                  {renderChatMessage(chat)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Chat Input */}\n        <div className=\"chat-input p-4 border-top\">\n          <form \n            onSubmit={(e) => {\n              e.preventDefault();\n              handleQuerySubmit();\n            }} \n            className=\"d-flex gap-3\"\n          >\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder={\n                selectedDocs.length > 0\n                  ? \"Ask a question about the selected documents...\"\n                  : \"Select at least one document first\"\n              }\n              disabled={selectedDocs.length === 0 || loading}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary px-4\"\n              disabled={selectedDocs.length === 0 || loading || !query.trim()}\n            >\n              Send\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}