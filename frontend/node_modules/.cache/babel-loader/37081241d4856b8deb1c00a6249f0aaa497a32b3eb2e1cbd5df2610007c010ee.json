{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n// At the top of App.js, add this import:\nimport { FaUpload } from \"react-icons/fa\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const renderChatMessage = chat => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message ai-message align-self-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content p-3 rounded-3\",\n      children: /*#__PURE__*/_jsxDEV(MessageFormatter, {\n        content: chat.response,\n        context: chat.context,\n        selectedDocs: selectedDocs,\n        openPdfPage: openPdfPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n\n  // Add these two new helper functions here:\n\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from(\"chat_history\").delete().eq(\"document_id\", selectedDoc.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async documentId => {\n    setIsHistoryLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"chat_history\").select(\"*\").eq(\"document_id\", documentId).order(\"created_at\", {\n        ascending: true\n      });\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    const {\n      data\n    } = await supabase.from(\"documents\").select(\"*\");\n    setDocuments(data || []);\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n  {/* Update handleQuerySubmit to remove the event parameter */}\n  const handleQuerySubmit = async () => {\n    if (!query.trim() || selectedDocs.length === 0) return;\n    setLoading(true);\n    try {\n      const documentIds = selectedDocs.map(doc => doc.id);\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(\"Failed to process query: \" + errorText);\n      }\n      const result = await response.json();\n\n      // Create new chat entry\n      const newEntry = {\n        document_ids: documentIds,\n        // Using the array field\n        query: query.trim(),\n        response: result.answer,\n        context: result.context // This will be stored as JSONB\n      };\n\n      // Store in database\n      const {\n        data: chatData,\n        error: insertError\n      } = await supabase.from(\"chat_history\").insert(newEntry).select().single();\n      if (insertError) throw insertError;\n\n      // Update local chat history\n      setChatHistory(prev => [...prev, chatData]);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload\", \" \", selectedFiles.length ? `(${selectedFiles.length})` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: \"150px\"\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: \"4px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"documents-list p-3\",\n          children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n              onClick: () => handleDocumentSelect(doc),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedDocs.some(d => d.id === doc.id),\n                onChange: () => handleDocumentSelect(doc),\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FaFilePdf, {\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-truncate\",\n                children: doc.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link text-danger p-1 delete-btn\",\n              onClick: () => handleDelete(doc),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedDocs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Selected Documents (\", selectedDocs.length, \"):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: selectedDocs.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Select one or more documents to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this), renderChatMessage(chat)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4 border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault(); // Ensure form doesn't refresh page\n              handleQuerySubmit(); // Remove the 'e' parameter here\n            },\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length > 0 ? \"Ask a question about the selected documents...\" : \"Select at least one document first\",\n              disabled: selectedDocs.length === 0 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: selectedDocs.length === 0 || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), pdfViewerState.isOpen && /*#__PURE__*/_jsxDEV(PDFViewer, {\n      url: pdfViewerState.url,\n      pageNumber: pdfViewerState.pageNumber,\n      onClose: closePdfViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5hGFHKaoTzLs75MXUu+lVq8TZlo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","pdfjsLib","getDocument","MessageFormatter","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","renderChatMessage","chat","className","children","content","response","context","openPdfPage","fileName","_jsxFileName","lineNumber","columnNumber","current","scrollIntoView","behavior","fetchChatHistory","id","handleDocumentSelect","doc","prev","isSelected","some","d","filter","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","data","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","documentId","select","order","ascending","handleDelete","filename","file_url","storageError","remove","deleteError","fetchDocuments","handleFileChange","event","files","Array","target","file","isValidType","type","isValidSize","size","name","handleUpload","length","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","single","fullText","i","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","text","fetch","method","headers","Authorization","body","JSON","stringify","pages","ok","errorText","Error","message","handleQuerySubmit","trim","documentIds","result","json","newEntry","document_ids","answer","chatData","insertError","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","checked","ref","onSubmit","e","preventDefault","value","placeholder","onClose","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n// At the top of App.js, add this import:\nimport { FaUpload } from \"react-icons/fa\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\";\n\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n\n  const renderChatMessage = (chat) => (\n    <div className=\"message ai-message align-self-start\">\n      <div className=\"message-content p-3 rounded-3\">\n        <MessageFormatter \n          content={chat.response}\n          context={chat.context}\n          selectedDocs={selectedDocs}\n          openPdfPage={openPdfPage}\n        />\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\nconst handleDocumentSelect = (doc) => {\n  setSelectedDocs(prev => {\n    const isSelected = prev.some(d => d.id === doc.id);\n    if (isSelected) {\n      return prev.filter(d => d.id !== doc.id);\n    } else {\n      return [...prev, doc];\n    }\n  });\n};\n\n\n  // Add these two new helper functions here:\n\n\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n\n    try {\n      // Delete from database\n      const { error } = await supabase\n        .from(\"chat_history\")\n        .delete()\n        .eq(\"document_id\", selectedDoc.id);\n\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null,\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page,\n        });\n\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null,\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async (documentId) => {\n    setIsHistoryLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from(\"chat_history\")\n        .select(\"*\")\n        .eq(\"document_id\", documentId)\n        .order(\"created_at\", { ascending: true });\n\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    const { data } = await supabase.from(\"documents\").select(\"*\");\n    setDocuments(data || []);\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter((file) => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n\n      return isValidType && isValidSize;\n    });\n\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: { publicUrl },\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n{/* Update handleQuerySubmit to remove the event parameter */}\nconst handleQuerySubmit = async () => {\n  if (!query.trim() || selectedDocs.length === 0) return;\n\n  setLoading(true);\n  try {\n    const documentIds = selectedDocs.map(doc => doc.id);\n\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(\"Failed to process query: \" + errorText);\n    }\n\n    const result = await response.json();\n\n    // Create new chat entry\n    const newEntry = {\n      document_ids: documentIds,  // Using the array field\n      query: query.trim(),\n      response: result.answer,\n      context: result.context     // This will be stored as JSONB\n    };\n\n    // Store in database\n    const { data: chatData, error: insertError } = await supabase\n      .from(\"chat_history\")\n      .insert(newEntry)\n      .select()\n      .single();\n\n    if (insertError) throw insertError;\n\n    // Update local chat history\n    setChatHistory(prev => [...prev, chatData]);\n    setQuery(\"\");\n  } catch (error) {\n    console.error(\"Query error:\", error);\n    alert(\"Error processing query: \" + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  return (\n    <div className=\"container-fluid vh-100\">\n      <div className=\"row h-100\">\n        {/* Sidebar */}\n        <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n          <div className=\"sticky-top\">\n            <div className=\"p-4 border-bottom\">\n              <h5 className=\"mb-3\">PDF Documents</h5>\n              <div className=\"d-flex gap-2 mb-3\">\n                <div className=\"upload-wrapper\">\n                  <input\n                    type=\"file\"\n                    accept=\".pdf\"\n                    multiple\n                    onChange={handleFileChange}\n                    className=\"d-none\"\n                    id=\"fileInput\"\n                    disabled={loading}\n                  />\n                  <label\n                    htmlFor=\"fileInput\"\n                    className=\"btn btn-outline-primary d-flex align-items-center gap-2\"\n                  >\n                    <FaUpload />\n                    Choose Files\n                  </label>\n                </div>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={handleUpload}\n                  disabled={!selectedFiles.length || loading}\n                >\n                  Upload{\" \"}\n                  {selectedFiles.length ? `(${selectedFiles.length})` : \"\"}\n                </button>\n              </div>\n\n              {/* Selected Files List */}\n              {selectedFiles.length > 0 && (\n                <div className=\"selected-files mb-3\">\n                  {Array.from(selectedFiles).map((file, index) => (\n                    <div\n                      key={index}\n                      className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\"\n                    >\n                      <div className=\"d-flex align-items-center\">\n                        <FaFilePdf className=\"text-primary me-2\" />\n                        <span\n                          className=\"text-truncate\"\n                          style={{ maxWidth: \"150px\" }}\n                        >\n                          {file.name}\n                        </span>\n                      </div>\n                      <button\n                        className=\"btn btn-link text-danger p-1\"\n                        onClick={() => {\n                          const newFiles = Array.from(selectedFiles).filter(\n                            (_, i) => i !== index\n                          );\n                          setSelectedFiles(newFiles);\n                        }}\n                      >\n                        <FaTrash size={14} />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {/* Upload Progress */}\n              {Object.entries(uploadProgress).map(([filename, progress]) => (\n                <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                  <div className=\"small text-muted mb-1\">{filename}</div>\n                  <div className=\"progress\" style={{ height: \"4px\" }}>\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{ width: `${progress}%` }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Documents List */}\n          <div className=\"documents-list p-3\">\n            {documents.map((doc) => (\n              <div\n                key={doc.id}\n                className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                  selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"\n                }`}\n              >\n                <div\n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedDocs.some(d => d.id === doc.id)}\n                    onChange={() => handleDocumentSelect(doc)}\n                    className=\"me-2\"\n                  />\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n                <button\n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={() => handleDelete(doc)}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Main Chat Area */}\n        <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n          {/* Chat Header */}\n          <div className=\"chat-header p-4 bg-light border-bottom\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {selectedDocs.length > 0 ? (\n                <>\n                  <h6 className=\"mb-0\">\n                    Selected Documents ({selectedDocs.length}):\n                    <br />\n                    <small className=\"text-muted\">\n                      {selectedDocs.map(doc => doc.filename).join(\", \")}\n                    </small>\n                  </h6>\n                  {chatHistory.length > 0 && (\n                    <button\n                      className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                      onClick={clearChat}\n                    >\n                      <FaTrash /> Clear Chat\n                    </button>\n                  )}\n                </>\n              ) : (\n                <h5 className=\"mb-0\">Select one or more documents to start chatting</h5>\n              )}\n            </div>\n          </div>\n\n          {/* Chat Messages */}\n          <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n            {isHistoryLoading ? (\n              <div className=\"text-center text-muted\">\n                Loading chat history...\n              </div>\n            ) : (\n              <div className=\"d-flex flex-column gap-4\">\n                {chatHistory.map((chat, index) => (\n                  <div\n                    key={index}\n                    className=\"d-flex flex-column gap-3\"\n                    ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                  >\n                    {/* User Message */}\n                    <div className=\"message user-message align-self-end\">\n                      <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                        {chat.query}\n                      </div>\n                    </div>\n\n                    {/* AI Message */}\n                    {renderChatMessage(chat)}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Chat Input */}\n          <div className=\"chat-input p-4 border-top\">\n            <form \n              onSubmit={(e) => {\n                e.preventDefault(); // Ensure form doesn't refresh page\n                handleQuerySubmit(); // Remove the 'e' parameter here\n              }} \n              className=\"d-flex gap-3\"\n            >\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder={\n                  selectedDocs.length > 0\n                    ? \"Ask a question about the selected documents...\"\n                    : \"Select at least one document first\"\n                }\n                disabled={selectedDocs.length === 0 || loading}\n              />\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary px-4\"\n                disabled={selectedDocs.length === 0 || loading || !query.trim()}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* PDF Viewer Modal */}\n      {pdfViewerState.isOpen && (\n        <PDFViewer\n          url={pdfViewerState.url}\n          pageNumber={pdfViewerState.pageNumber}\n          onClose={closePdfViewer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}