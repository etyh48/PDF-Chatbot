{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/components/MessageFormatter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageFormatter = ({\n  content,\n  context,\n  selectedDocs,\n  openPdfPage\n}) => {\n  _s();\n  const [isContextExpanded, setIsContextExpanded] = useState(false);\n  const truncateContext = (text, maxLength = 200) => {\n    if (!text) return \"\";\n    if (text.length <= maxLength) return text;\n    const truncated = text.substring(0, maxLength);\n    const lastPeriod = truncated.lastIndexOf(\".\");\n    const lastQuestion = truncated.lastIndexOf(\"?\");\n    const lastExclamation = truncated.lastIndexOf(\"!\");\n    const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n    if (lastSentenceEnd > 0) {\n      return text.substring(0, lastSentenceEnd + 1) + \"...\";\n    }\n    const lastSpace = truncated.lastIndexOf(\" \");\n    return text.substring(0, lastSpace) + \"...\";\n  };\n  const formatText = text => {\n    if (!text) return '';\n    let formattedText = text.replace(/^(\\*{3})/g, '').replace(/(\\*\\*|__)(.*?)\\1/g, '<strong>$2</strong>').replace(/(\\*|_)(.*?)\\1/g, '<em>$2</em>').replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n      const level = hashes.length;\n      return `<h${level} class=\"text-${getHeaderSize(level)} font-bold my-2\">${content}</h${level}>`;\n    }).replace(/(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g, '<span class=\"font-mono bg-blue-50 text-blue-700 px-1 rounded\">$1</span>');\n    return formattedText;\n  };\n  const getHeaderSize = level => {\n    const sizes = {\n      1: 'xl',\n      2: 'lg',\n      3: 'base',\n      4: 'sm',\n      5: 'xs',\n      6: 'xs'\n    };\n    return sizes[level] || 'base';\n  };\n  const formatSection = section => {\n    if (!section) return null;\n    const lines = section.split('\\n');\n    const formattedLines = [];\n    let currentList = [];\n    lines.forEach((line, index) => {\n      const trimmedLine = line.trim();\n      if (trimmedLine) {\n        formattedLines.push(/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2\",\n          dangerouslySetInnerHTML: {\n            __html: formatText(trimmedLine)\n          }\n        }, `para-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: formattedLines\n    }, void 0, false);\n  };\n  const sections = content.split('\\n\\n').filter(section => section.trim());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-content p-3 rounded-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content text-gray-800 mb-2\",\n      children: [sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: formatSection(section)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), context && context.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between cursor-pointer select-none\",\n          onClick: () => setIsContextExpanded(!isContextExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl font-semibold\",\n              children: \"Relevant Source Excerpts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: [context.length, \" sources\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-100 rounded w-6 h-6 flex items-center justify-center\",\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), isContextExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-2\",\n          children: context.map((ctx, idx) => {\n            const relatedDoc = selectedDocs.find(d => d.id === ctx.documentId);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-gray-50 rounded\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-1 text-sm text-gray-600\",\n                    children: (relatedDoc === null || relatedDoc === void 0 ? void 0 : relatedDoc.filename) || `Document ${ctx.documentId}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: truncateContext(ctx.content)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    openPdfPage(relatedDoc === null || relatedDoc === void 0 ? void 0 : relatedDoc.file_url, ctx.page_number);\n                  },\n                  className: \"ml-4 px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\",\n                  children: [\"Page \", ctx.page_number]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageFormatter, \"GD9DmBTGoEaDAOLho5CiczLydoI=\");\n_c = MessageFormatter;\nexport default MessageFormatter;\nvar _c;\n$RefreshReg$(_c, \"MessageFormatter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageFormatter","content","context","selectedDocs","openPdfPage","_s","isContextExpanded","setIsContextExpanded","truncateContext","text","maxLength","length","truncated","substring","lastPeriod","lastIndexOf","lastQuestion","lastExclamation","lastSentenceEnd","Math","max","lastSpace","formatText","formattedText","replace","match","hashes","level","getHeaderSize","sizes","formatSection","section","lines","split","formattedLines","currentList","forEach","line","index","trimmedLine","trim","push","className","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","children","sections","filter","map","idx","onClick","ctx","relatedDoc","find","d","id","documentId","filename","e","stopPropagation","file_url","page_number","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/components/MessageFormatter.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MessageFormatter = ({ content, context, selectedDocs, openPdfPage }) => {\n  const [isContextExpanded, setIsContextExpanded] = useState(false);\n\n  const truncateContext = (text, maxLength = 200) => {\n    if (!text) return \"\";\n    if (text.length <= maxLength) return text;\n    \n    const truncated = text.substring(0, maxLength);\n    const lastPeriod = truncated.lastIndexOf(\".\");\n    const lastQuestion = truncated.lastIndexOf(\"?\");\n    const lastExclamation = truncated.lastIndexOf(\"!\");\n    \n    const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n    \n    if (lastSentenceEnd > 0) {\n      return text.substring(0, lastSentenceEnd + 1) + \"...\";\n    }\n    \n    const lastSpace = truncated.lastIndexOf(\" \");\n    return text.substring(0, lastSpace) + \"...\";\n  };\n\n  const formatText = (text) => {\n    if (!text) return '';\n    \n    let formattedText = text\n      .replace(/^(\\*{3})/g, '')\n      .replace(/(\\*\\*|__)(.*?)\\1/g, '<strong>$2</strong>')\n      .replace(/(\\*|_)(.*?)\\1/g, '<em>$2</em>')\n      .replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, content) => {\n        const level = hashes.length;\n        return `<h${level} class=\"text-${getHeaderSize(level)} font-bold my-2\">${content}</h${level}>`;\n      })\n      .replace(/(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g, \n        '<span class=\"font-mono bg-blue-50 text-blue-700 px-1 rounded\">$1</span>');\n  \n    return formattedText;\n  };\n\n  const getHeaderSize = (level) => {\n    const sizes = {\n      1: 'xl',\n      2: 'lg',\n      3: 'base',\n      4: 'sm',\n      5: 'xs',\n      6: 'xs'\n    };\n    return sizes[level] || 'base';\n  };\n\n  const formatSection = (section) => {\n    if (!section) return null;\n    const lines = section.split('\\n');\n    const formattedLines = [];\n    let currentList = [];\n    \n    lines.forEach((line, index) => {\n      const trimmedLine = line.trim();\n      if (trimmedLine) {\n        formattedLines.push(\n          <p \n            key={`para-${index}`}\n            className=\"mb-2\"\n            dangerouslySetInnerHTML={{ __html: formatText(trimmedLine) }}\n          />\n        );\n      }\n    });\n    \n    return <>{formattedLines}</>;\n  };\n\n  const sections = content\n    .split('\\n\\n')\n    .filter(section => section.trim());\n\n  return (\n    <div className=\"message-content p-3 rounded-3\">\n      <div className=\"message-content text-gray-800 mb-2\">\n        {sections.map((section, idx) => (\n          <div key={idx} className=\"mb-2\">\n            {formatSection(section)}\n          </div>\n        ))}\n        \n        {context && context.length > 0 && (\n          <div className=\"mt-2\">\n            <div \n              className=\"flex items-center justify-between cursor-pointer select-none\"\n              onClick={() => setIsContextExpanded(!isContextExpanded)}\n            >\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-xl font-semibold\">Relevant Source Excerpts</span>\n                <span className=\"text-gray-600\">{context.length} sources</span>\n              </div>\n              <button \n                className=\"bg-gray-100 rounded w-6 h-6 flex items-center justify-center\"\n              >\n                ▾\n              </button>\n            </div>\n            \n            {isContextExpanded && (\n              <div className=\"mt-2 space-y-2\">\n                {context.map((ctx, idx) => {\n                  const relatedDoc = selectedDocs.find(d => d.id === ctx.documentId);\n                  return (\n                    <div key={idx} className=\"p-2 bg-gray-50 rounded\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1\">\n                          <div className=\"mb-1 text-sm text-gray-600\">\n                            {relatedDoc?.filename || `Document ${ctx.documentId}`}\n                          </div>\n                          <div className=\"text-sm\">\n                            {truncateContext(ctx.content)}\n                          </div>\n                        </div>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            openPdfPage(relatedDoc?.file_url, ctx.page_number);\n                          }}\n                          className=\"ml-4 px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\n                        >\n                          Page {ctx.page_number}\n                        </button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageFormatter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}