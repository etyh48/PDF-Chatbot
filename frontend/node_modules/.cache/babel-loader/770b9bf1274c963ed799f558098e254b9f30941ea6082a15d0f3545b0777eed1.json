{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage\n      const {\n        error: storageError\n      } = await supabase.storage.from('pdfs').remove([doc.file_url.split('/').pop()]);\n      if (storageError) throw storageError;\n\n      // Delete from database\n      const {\n        error: dbError\n      } = await supabase.from('documents').delete().eq('id', doc.id);\n      if (dbError) throw dbError;\n\n      // Also delete related chunks\n      const {\n        error: chunksError\n      } = await supabase.from('document_chunks').delete().eq('document_id', doc.id);\n      if (chunksError) throw chunksError;\n\n      // Refresh documents list\n      fetchDocuments();\n      if ((selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id) === doc.id) {\n        setSelectedDoc(null);\n        setChatHistory([]);\n      }\n    } catch (error) {\n      console.error('Delete error:', error);\n      alert('Error deleting document');\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    const {\n      data\n    } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    const validFiles = files.filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(validFiles);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // 1. Upload to Supabase Storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from('pdfs').upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // 2. Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from('pdfs').getPublicUrl(uploadData.path);\n\n        // 3. Create document record\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from('documents').insert({\n          filename: file.name,\n          file_url: publicUrl\n        }).select().single();\n        if (docError) throw docError;\n\n        // 4. Process PDF using Supabase Edge Function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            fileUrl: publicUrl\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to process ${file.name}: ${await response.text()}`);\n        }\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      }\n\n      // Clear selected files and refresh document list\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error('Upload error:', error);\n      alert('Error uploading files: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleQuerySubmit = async e => {\n    e.preventDefault();\n    if (!query.trim() || !selectedDoc) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process query: ' + (await response.text()));\n      }\n      const result = await response.json();\n      setChatHistory(prev => [...prev, {\n        query: query.trim(),\n        response: result.answer,\n        context: result.context\n      }]);\n      setQuery('');\n    } catch (error) {\n      console.error('Query error:', error);\n      alert('Error processing query: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          multiple: true,\n          onChange: handleFileChange,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !selectedFiles.length || loading,\n          children: [\"Upload PDF\", selectedFiles.length > 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, filename, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"documents-list\",\n        children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `document-item ${(selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id) === doc.id ? 'selected' : ''}`,\n          onClick: () => setSelectedDoc(doc),\n          children: doc.filename\n        }, doc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"query\",\n            children: [\"Q: \", chat.query]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"response\",\n            children: [\"A: \", chat.response]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleQuerySubmit,\n        className: \"query-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask a question...\",\n          disabled: !selectedDoc || loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedDoc || loading || !query.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a7TIiotTHunH0Svw/CYEMx6tpzY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createClient","jsxDEV","_jsxDEV","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","handleDelete","doc","error","storageError","storage","from","remove","file_url","split","pop","dbError","delete","eq","id","chunksError","fetchDocuments","console","alert","data","select","handleFileChange","e","files","Array","target","validFiles","filter","file","isValidType","type","isValidSize","size","name","handleUpload","length","prev","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","docData","docError","insert","filename","single","response","fetch","method","headers","body","JSON","stringify","documentId","fileUrl","ok","Error","text","message","handleQuerySubmit","preventDefault","trim","result","json","answer","context","className","children","accept","multiple","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","progress","style","width","chat","index","onSubmit","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage\n      const { error: storageError } = await supabase.storage\n        .from('pdfs')\n        .remove([doc.file_url.split('/').pop()]);\n      \n      if (storageError) throw storageError;\n\n      // Delete from database\n      const { error: dbError } = await supabase\n        .from('documents')\n        .delete()\n        .eq('id', doc.id);\n\n      if (dbError) throw dbError;\n\n      // Also delete related chunks\n      const { error: chunksError } = await supabase\n        .from('document_chunks')\n        .delete()\n        .eq('document_id', doc.id);\n\n      if (chunksError) throw chunksError;\n\n      // Refresh documents list\n      fetchDocuments();\n      if (selectedDoc?.id === doc.id) {\n        setSelectedDoc(null);\n        setChatHistory([]);\n      }\n    } catch (error) {\n      console.error('Delete error:', error);\n      alert('Error deleting document');\n    }\n  };\n\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    const { data } = await supabase.from('documents').select('*');\n    setDocuments(data || []);\n  };\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    const validFiles = files.filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(validFiles);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  const handleUpload = async () => {\n  if (!selectedFiles.length) return;\n\n  setLoading(true);\n  try {\n    for (const file of selectedFiles) {\n      setUploadProgress(prev => ({ ...prev, [file.name]: 0 }));\n\n      // 1. Upload to Supabase Storage\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('pdfs')\n        .upload(`${Date.now()}_${file.name}`, file);\n\n      if (uploadError) throw uploadError;\n\n      // 2. Get public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('pdfs')\n        .getPublicUrl(uploadData.path);\n\n      // 3. Create document record\n      const { data: docData, error: docError } = await supabase\n        .from('documents')\n        .insert({\n          filename: file.name,\n          file_url: publicUrl\n        })\n        .select()\n        .single();\n\n      if (docError) throw docError;\n\n      // 4. Process PDF using Supabase Edge Function\n      const response = await fetch(\n        `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            fileUrl: publicUrl\n          })\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to process ${file.name}: ${await response.text()}`);\n      }\n\n      setUploadProgress(prev => ({ ...prev, [file.name]: 100 }));\n    }\n\n    // Clear selected files and refresh document list\n    setSelectedFiles([]);\n    setUploadProgress({});\n    fetchDocuments();\n  } catch (error) {\n    console.error('Upload error:', error);\n    alert('Error uploading files: ' + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n\n\n\nconst handleQuerySubmit = async (e) => {\n  e.preventDefault();\n  if (!query.trim() || !selectedDoc) return;\n\n  setLoading(true);\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentId: selectedDoc.id\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Failed to process query: ' + await response.text());\n    }\n\n    const result = await response.json();\n    setChatHistory(prev => [...prev, {\n      query: query.trim(),\n      response: result.answer,\n      context: result.context\n    }]);\n    setQuery('');\n  } catch (error) {\n    console.error('Query error:', error);\n    alert('Error processing query: ' + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n  return (\n    <div className=\"app\">\n      <div className=\"sidebar\">\n        <div className=\"upload-section\">\n          <input\n            type=\"file\"\n            accept=\".pdf\"\n            multiple\n            onChange={handleFileChange}\n            disabled={loading}\n          />\n          <button \n            onClick={handleUpload}\n            disabled={!selectedFiles.length || loading}\n          >\n            Upload PDF{selectedFiles.length > 1 ? 's' : ''}\n          </button>\n          {/* Upload Progress */}\n          {Object.entries(uploadProgress).map(([filename, progress]) => (\n            <div key={filename} className=\"upload-progress\">\n              <div>{filename}</div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress\" \n                  style={{ width: `${progress}%` }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"documents-list\">\n          {documents.map(doc => (\n            <div\n              key={doc.id}\n              className={`document-item ${selectedDoc?.id === doc.id ? 'selected' : ''}`}\n              onClick={() => setSelectedDoc(doc)}\n            >\n              {doc.filename}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"chat-section\">\n        <div className=\"chat-history\">\n          {chatHistory.map((chat, index) => (\n            <div key={index} className=\"chat-entry\">\n              <div className=\"query\">Q: {chat.query}</div>\n              <div className=\"response\">A: {chat.response}</div>\n            </div>\n          ))}\n        </div>\n\n        <form onSubmit={handleQuerySubmit} className=\"query-input\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Ask a question...\"\n            disabled={!selectedDoc || loading}\n          />\n          <button type=\"submit\" disabled={!selectedDoc || loading || !query.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}