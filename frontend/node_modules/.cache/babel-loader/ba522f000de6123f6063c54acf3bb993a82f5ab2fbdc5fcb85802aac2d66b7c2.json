{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Box, Drawer, AppBar, Toolbar, Typography, Divider, List, ListItem, ListItemIcon, ListItemText, Button, TextField, Paper, IconButton, Chip, CircularProgress, Container, Card, CardContent, LinearProgress, useTheme } from '@mui/material';\nimport { AddCircleOutline, Delete, Send, UploadFile, Description, Chat as ChatIcon, ExpandMore, ExpandLess, Launch } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport MessageFormatter from './components/MessageFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs';\nconst drawerWidth = 320;\n\n// Create dark theme\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9'\n    },\n    background: {\n      default: '#121212',\n      paper: '#1e1e1e'\n    }\n  },\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#1e1e1e',\n          borderRight: '1px solid rgba(255, 255, 255, 0.12)'\n        }\n      }\n    },\n    MuiListItem: {\n      styleOverrides: {\n        root: {\n          '&.Mui-selected': {\n            backgroundColor: 'rgba(144, 202, 249, 0.16)',\n            '&:hover': {\n              backgroundColor: 'rgba(144, 202, 249, 0.24)'\n            }\n          }\n        }\n      }\n    }\n  }\n});\n\n// Styled components\nconst StyledDrawer = styled(Drawer)(({\n  theme\n}) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  '& .MuiDrawer-paper': {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n    position: 'relative',\n    height: '100vh'\n  }\n}));\n_c = StyledDrawer;\nconst Main = styled('main')(({\n  theme\n}) => ({\n  flexGrow: 1,\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: 0,\n  margin: 0,\n  overflow: 'hidden'\n}));\n_c2 = Main;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2)\n}));\n_c3 = ChatContainer;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\n_c4 = InputContainer;\nconst MessageBubble = styled(Paper)(({\n  theme,\n  variant\n}) => ({\n  padding: theme.spacing(2),\n  maxWidth: '70%',\n  marginBottom: theme.spacing(2),\n  backgroundColor: variant === 'user' ? theme.palette.primary.dark : theme.palette.background.paper,\n  color: variant === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  alignSelf: variant === 'user' ? 'flex-end' : 'flex-start',\n  borderRadius: theme.spacing(2),\n  border: `1px solid ${theme.palette.divider}`\n}));\n_c5 = MessageBubble;\nconst FileInput = styled('input')({\n  display: 'none'\n});\n_c6 = FileInput;\nfunction App() {\n  _s();\n  const theme = useTheme();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const latestMessageRef = useRef(null);\n\n  // Supabase client setup\n  const supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\n\n  // File handling functions\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024;\n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // Document selection handler\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      return isSelected ? prev.filter(d => d.id !== doc.id) : [...prev, doc];\n    });\n  };\n\n  // Chat message rendering\n  const renderMessage = (message, index) => /*#__PURE__*/_jsxDEV(Box, {\n    ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 2,\n    children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n      variant: \"user\",\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: message.query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"message ai-message align-self-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-3 outer\",\n        children: /*#__PURE__*/_jsxDEV(MessageFormatter, {\n          content: message.response,\n          context: message.context,\n          selectedDocs: selectedDocs,\n          openPdfPage: openPdfPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []);\n\n  // Scroll to latest message\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n\n  // Fetch documents\n  const fetchDocuments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('documents').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  // Fetch all chats\n  const fetchChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle document deletion\n  const handleDelete = async doc => {\n    try {\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  // Handle query submission\n  const handleQuerySubmit = async () => {\n    if (!(query !== null && query !== void 0 && query.trim())) {\n      alert('Please enter a query');\n      return;\n    }\n    if (!currentChatId && !(selectedDocs !== null && selectedDocs !== void 0 && selectedDocs.length)) {\n      alert('Please select at least one document to start a chat');\n      return;\n    }\n    setLoading(true);\n    try {\n      let chatId = currentChatId;\n      let documentIds = selectedDocs.map(doc => doc.id);\n      if (!chatId) {\n        const {\n          data: newChat,\n          error: chatError\n        } = await supabase.from('chats').insert({\n          title: query.trim(),\n          document_ids: documentIds\n        }).select().single();\n        if (chatError) throw chatError;\n        chatId = newChat.id;\n        setCurrentChatId(chatId);\n      }\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const result = await response.json();\n      const {\n        error: messageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: chatId,\n        query: query.trim(),\n        response: result.answer,\n        context: result.context || null,\n        document_ids: documentIds,\n        type: 'conversation'\n      });\n      if (messageError) throw messageError;\n      fetchChatMessages(chatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch chat messages\n  const fetchChatMessages = async chatId => {\n    if (!chatId) return;\n    setLoading(true);\n    try {\n      var _chatData$document_id;\n      const {\n        data: chatData,\n        error: chatError\n      } = await supabase.from(\"chats\").select(\"*\").eq(\"id\", chatId).single();\n      if (chatError) throw chatError;\n      if (((_chatData$document_id = chatData.document_ids) === null || _chatData$document_id === void 0 ? void 0 : _chatData$document_id.length) > 0) {\n        const {\n          data: docsData,\n          error: docsError\n        } = await supabase.from(\"documents\").select(\"*\").in(\"id\", chatData.document_ids);\n        if (docsError) throw docsError;\n        setSelectedDocs(docsData || []);\n      }\n      const {\n        data: messages,\n        error: messagesError\n      } = await supabase.from(\"chat_messages\").select(\"*\").eq(\"chat_id\", chatId).order(\"created_at\", {\n        ascending: true\n      });\n      if (messagesError) throw messagesError;\n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle new chat creation\n  const handleNewChat = () => {\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Open PDF viewer\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        const page = parseInt(pageNumber, 10) || 1;\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        width: '100%',\n        bgcolor: 'background.default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(StyledDrawer, {\n        variant: \"permanent\",\n        sx: {\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            position: 'relative',\n            height: '100vh'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            children: \"PDF Chat Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            children: [/*#__PURE__*/_jsxDEV(FileInput, {\n              id: \"file-input\",\n              type: \"file\",\n              accept: \".pdf\",\n              multiple: true,\n              onChange: handleFileChange,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              component: \"span\",\n              startIcon: /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 26\n              }, this),\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: \"Choose Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            disabled: !selectedFiles.length || loading,\n            onClick: handleUpload,\n            children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            py: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 26\n              }, this),\n              onClick: handleNewChat,\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 11\n          }, this), allChats.map(chat => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: currentChatId === chat.id,\n            onClick: () => {\n              setCurrentChatId(chat.id);\n              fetchChatMessages(chat.id);\n            },\n            sx: {\n              mt: 1,\n              borderRadius: 1,\n              '&.Mui-selected': {\n                backgroundColor: 'primary.light',\n                '&:hover': {\n                  backgroundColor: 'primary.light'\n                }\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n                color: currentChatId === chat.id ? 'primary' : 'inherit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: chat.title || `Chat ${chat.id}`,\n              secondary: new Date(chat.created_at).toLocaleDateString(),\n              primaryTypographyProps: {\n                noWrap: true,\n                fontWeight: currentChatId === chat.id ? 500 : 400\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: documents.map(doc => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            selected: selectedDocs.some(d => d.id === doc.id),\n            onClick: () => handleDocumentSelect(doc),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Description, {\n                color: selectedDocs.some(d => d.id === doc.id) ? 'primary' : 'inherit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: doc.filename,\n              primaryTypographyProps: {\n                noWrap: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDelete(doc);\n              },\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          sx: {\n            mb: 2,\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentChatId ? 'Current Chat' : 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 1,\n            mt: 1,\n            children: selectedDocs.map(doc => /*#__PURE__*/_jsxDEV(Chip, {\n              label: doc.filename,\n              onDelete: () => handleDocumentSelect(doc),\n              size: \"small\"\n            }, doc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 23\n          }, this), chatHistory.map((message, index) => renderMessage(message, index))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length ? \"Ask a question...\" : \"Select documents to start\",\n              disabled: !selectedDocs.length || loading,\n              variant: \"outlined\",\n              size: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 24\n              }, this),\n              disabled: !query.trim() || !selectedDocs.length || loading,\n              onClick: handleQuerySubmit,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8AbIHHE78fwqZlOevluO4OZZOeA=\", false, function () {\n  return [useTheme];\n});\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledDrawer\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"ChatContainer\");\n$RefreshReg$(_c4, \"InputContainer\");\n$RefreshReg$(_c5, \"MessageBubble\");\n$RefreshReg$(_c6, \"FileInput\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","pdfjsLib","getDocument","createTheme","ThemeProvider","CssBaseline","Box","Drawer","AppBar","Toolbar","Typography","Divider","List","ListItem","ListItemIcon","ListItemText","Button","TextField","Paper","IconButton","Chip","CircularProgress","Container","Card","CardContent","LinearProgress","useTheme","AddCircleOutline","Delete","Send","UploadFile","Description","Chat","ChatIcon","ExpandMore","ExpandLess","Launch","styled","MessageFormatter","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","drawerWidth","darkTheme","palette","mode","primary","main","background","default","paper","components","MuiDrawer","styleOverrides","backgroundColor","borderRight","MuiListItem","root","StyledDrawer","theme","width","flexShrink","boxSizing","position","height","_c","Main","flexGrow","display","flexDirection","padding","margin","overflow","_c2","ChatContainer","overflowY","spacing","marginBottom","gap","_c3","InputContainer","borderTop","divider","_c4","MessageBubble","variant","maxWidth","dark","color","contrastText","text","alignSelf","borderRadius","border","_c5","FileInput","_c6","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","currentChatId","setCurrentChatId","allChats","setAllChats","latestMessageRef","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","handleFileChange","event","files","Array","from","target","filter","file","isValidType","type","isValidSize","size","alert","name","handleDocumentSelect","doc","prev","isSelected","some","d","id","renderMessage","message","index","ref","length","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","className","content","response","context","openPdfPage","fetchInitialData","Promise","all","fetchDocuments","fetchChats","current","scrollIntoView","behavior","data","error","select","order","ascending","console","handleUpload","uploadData","uploadError","storage","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","filename","file_url","total_pages","single","fullText","i","page","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","pageNumber","fetch","method","headers","Authorization","body","JSON","stringify","documentId","pages","ok","errorText","Error","handleDelete","split","pop","storageError","remove","deleteError","delete","eq","handleQuerySubmit","trim","chatId","documentIds","newChat","chatError","title","document_ids","result","json","messageError","chat_id","answer","fetchChatMessages","_chatData$document_id","chatData","docsData","docsError","in","messages","messagesError","handleNewChat","url","signedUrlData","createSignedUrl","signedUrl","parseInt","viewerUrl","encodeURIComponent","window","open","sx","bgcolor","noWrap","p","htmlFor","accept","multiple","onChange","disabled","component","startIcon","fullWidth","mb","onClick","py","chat","button","selected","mt","secondary","created_at","toLocaleDateString","primaryTypographyProps","fontWeight","e","stopPropagation","fontSize","label","onDelete","value","placeholder","endIcon","_c7","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { getDocument } from 'pdfjs-dist';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport {\n  Box,\n  Drawer,\n  AppBar,\n  Toolbar,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n  Chip,\n  CircularProgress,\n  Container,\n  Card,\n  CardContent,\n  LinearProgress,\n  useTheme\n} from '@mui/material';\nimport {\n  AddCircleOutline,\n  Delete,\n  Send,\n  UploadFile,\n  Description,\n  Chat as ChatIcon,\n  ExpandMore,\n  ExpandLess,\n  Launch\n} from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport MessageFormatter from './components/MessageFormatter';\n\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs';\n\nconst drawerWidth = 320;\n\n// Create dark theme\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9',\n    },\n    background: {\n      default: '#121212',\n      paper: '#1e1e1e',\n    },\n  },\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#1e1e1e',\n          borderRight: '1px solid rgba(255, 255, 255, 0.12)',\n        },\n      },\n    },\n    MuiListItem: {\n      styleOverrides: {\n        root: {\n          '&.Mui-selected': {\n            backgroundColor: 'rgba(144, 202, 249, 0.16)',\n            '&:hover': {\n              backgroundColor: 'rgba(144, 202, 249, 0.24)',\n            },\n          },\n        },\n      },\n    },\n  },\n});\n\n// Styled components\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  '& .MuiDrawer-paper': {\n    width: drawerWidth,\n    boxSizing: 'border-box',\n    position: 'relative',\n    height: '100vh'\n  },\n}));\n\nconst Main = styled('main')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: 0,\n  margin: 0,\n  overflow: 'hidden'\n}));\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2)\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderTop: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageBubble = styled(Paper)(({ theme, variant }) => ({\n  padding: theme.spacing(2),\n  maxWidth: '70%',\n  marginBottom: theme.spacing(2),\n  backgroundColor: variant === 'user' \n    ? theme.palette.primary.dark\n    : theme.palette.background.paper,\n  color: variant === 'user' \n    ? theme.palette.primary.contrastText \n    : theme.palette.text.primary,\n  alignSelf: variant === 'user' ? 'flex-end' : 'flex-start',\n  borderRadius: theme.spacing(2),\n  border: `1px solid ${theme.palette.divider}`,\n}));\n\nconst FileInput = styled('input')({\n  display: 'none',\n});\n\nfunction App() {\n  const theme = useTheme();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [allChats, setAllChats] = useState([]);\n  const latestMessageRef = useRef(null);\n\n  // Supabase client setup\n  const supabase = createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_ANON_KEY\n  );\n\n  // File handling functions\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === 'application/pdf';\n      const isValidSize = file.size <= 10 * 1024 * 1024;\n      \n      if (!isValidType) alert(`${file.name} is not a PDF file`);\n      if (!isValidSize) alert(`${file.name} exceeds 10MB size limit`);\n      \n      return isValidType && isValidSize;\n    });\n    \n    setSelectedFiles(files);\n  };\n\n  // Document selection handler\n  const handleDocumentSelect = (doc) => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      return isSelected ? prev.filter(d => d.id !== doc.id) : [...prev, doc];\n    });\n  };\n\n  // Chat message rendering\n  const renderMessage = (message, index) => (\n    <Box\n      key={index}\n      ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n      display=\"flex\"\n      flexDirection=\"column\"\n      gap={2}\n    >\n      <MessageBubble variant=\"user\" elevation={1}>\n        <Typography>{message.query}</Typography>\n      </MessageBubble>\n\n      <Box className=\"message ai-message align-self-start\">\n        <div className=\"p-3 rounded-3 outer\">\n          <MessageFormatter \n            content={message.response}\n            context={message.context}\n            selectedDocs={selectedDocs}\n            openPdfPage={openPdfPage}\n          />\n        </div>\n      </Box>\n    </Box>\n  );\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []);\n\n  // Scroll to latest message\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatHistory]);\n\n  // Fetch documents\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('documents')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  // Fetch all chats\n  const fetchChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setAllChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const { data: { publicUrl } } = supabase.storage\n          .from(\"pdfs\")\n          .getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle document deletion\n  const handleDelete = async (doc) => {\n    try {\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  // Handle query submission\n  const handleQuerySubmit = async () => {\n    if (!query?.trim()) {\n      alert('Please enter a query');\n      return;\n    }\n\n    if (!currentChatId && !selectedDocs?.length) {\n      alert('Please select at least one document to start a chat');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      let chatId = currentChatId;\n      let documentIds = selectedDocs.map(doc => doc.id);\n\n      if (!chatId) {\n        const { data: newChat, error: chatError } = await supabase\n          .from('chats')\n          .insert({\n            title: query.trim(),\n            document_ids: documentIds\n          })\n          .select()\n          .single();\n\n        if (chatError) throw chatError;\n\n        chatId = newChat.id;\n        setCurrentChatId(chatId);\n      }\n\n      const response = await fetch(\n        `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n          },\n          body: JSON.stringify({\n            query: query.trim(),\n            documentIds\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n\n      const result = await response.json();\n\n      const { error: messageError } = await supabase\n        .from(\"chat_messages\")\n        .insert({\n          chat_id: chatId,\n          query: query.trim(),\n          response: result.answer,\n          context: result.context || null,\n          document_ids: documentIds,\n          type: 'conversation'\n        });\n\n      if (messageError) throw messageError;\n\n      fetchChatMessages(chatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch chat messages\n  const fetchChatMessages = async (chatId) => {\n    if (!chatId) return;\n    \n    setLoading(true);\n    try {\n      const { data: chatData, error: chatError } = await supabase\n        .from(\"chats\")\n        .select(\"*\")\n        .eq(\"id\", chatId)\n        .single();\n\n      if (chatError) throw chatError;\n\n      if (chatData.document_ids?.length > 0) {\n        const { data: docsData, error: docsError } = await supabase\n          .from(\"documents\")\n          .select(\"*\")\n          .in(\"id\", chatData.document_ids);\n\n        if (docsError) throw docsError;\n        setSelectedDocs(docsData || []);\n      }\n\n      const { data: messages, error: messagesError } = await supabase\n        .from(\"chat_messages\")\n        .select(\"*\")\n        .eq(\"chat_id\", chatId)\n        .order(\"created_at\", { ascending: true });\n\n      if (messagesError) throw messagesError;\n      setChatHistory(messages || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n      setChatHistory([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle new chat creation\n  const handleNewChat = () => {\n    setCurrentChatId(null);\n    setSelectedDocs([]);\n    setChatHistory([]);\n    setQuery('');\n  };\n\n  // Open PDF viewer\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        const page = parseInt(pageNumber, 10) || 1;\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <Box sx={{ display: 'flex', width: '100%', bgcolor: 'background.default' }}>\n      <StyledDrawer\n        variant=\"permanent\"\n        sx={{\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            position: 'relative',\n            height: '100vh'\n          }\n        }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            PDF Chat Assistant\n          </Typography>\n        </Toolbar>\n        <Divider />\n        \n        {/* File Upload Section */}\n        <Box p={2}>\n          <label htmlFor=\"file-input\">\n            <FileInput\n              id=\"file-input\"\n              type=\"file\"\n              accept=\".pdf\"\n              multiple\n              onChange={handleFileChange}\n              disabled={loading}\n            />\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              startIcon={<UploadFile />}\n              fullWidth\n              sx={{ mb: 2 }}\n            >\n              Choose Files\n            </Button>\n          </label>\n          \n          <Button\n            variant=\"contained\"\n            fullWidth\n            disabled={!selectedFiles.length || loading}\n            onClick={handleUpload}\n          >\n            Upload {selectedFiles.length ? `(${selectedFiles.length})` : ''}\n          </Button>\n        </Box>\n        \n        <Divider />\n\n        {/* Chat History */}\n        <List sx={{ py: 2 }}>\n          <ListItem>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              startIcon={<AddCircleOutline />}\n              onClick={handleNewChat}\n            >\n              New Chat\n            </Button>\n          </ListItem>\n          \n          {allChats.map((chat) => (\n            <ListItem\n              key={chat.id}\n              button\n              selected={currentChatId === chat.id}\n              onClick={() => {\n                setCurrentChatId(chat.id);\n                fetchChatMessages(chat.id);\n              }}\n              sx={{\n                mt: 1,\n                borderRadius: 1,\n                '&.Mui-selected': {\n                  backgroundColor: 'primary.light',\n                  '&:hover': {\n                    backgroundColor: 'primary.light',\n                  },\n                },\n              }}\n            >\n              <ListItemIcon>\n                <ChatIcon color={currentChatId === chat.id ? 'primary' : 'inherit'} />\n              </ListItemIcon>\n              <ListItemText\n                primary={chat.title || `Chat ${chat.id}`}\n                secondary={new Date(chat.created_at).toLocaleDateString()}\n                primaryTypographyProps={{\n                  noWrap: true,\n                  fontWeight: currentChatId === chat.id ? 500 : 400,\n                }}\n              />\n            </ListItem>\n          ))}\n        </List>\n\n        <Divider />\n        \n        {/* Documents List */}\n        <List>\n          {documents.map((doc) => (\n            <ListItem\n              key={doc.id}\n              button\n              selected={selectedDocs.some(d => d.id === doc.id)}\n              onClick={() => handleDocumentSelect(doc)}\n            >\n              <ListItemIcon>\n                <Description color={selectedDocs.some(d => d.id === doc.id) ? 'primary' : 'inherit'} />\n              </ListItemIcon>\n              <ListItemText \n                primary={doc.filename}\n                primaryTypographyProps={{ noWrap: true }}\n              />\n              <IconButton\n                size=\"small\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleDelete(doc);\n                }}\n              >\n                <Delete fontSize=\"small\" />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </StyledDrawer>\n\n      <Main>\n        {/* Chat Header */}\n        <Paper elevation={0} sx={{ mb: 2, p: 2 }}>\n          <Typography variant=\"h6\">\n            {currentChatId ? 'Current Chat' : 'New Chat'}\n          </Typography>\n          <Box display=\"flex\" gap={1} mt={1}>\n            {selectedDocs.map(doc => (\n              <Chip\n                key={doc.id}\n                label={doc.filename}\n                onDelete={() => handleDocumentSelect(doc)}\n                size=\"small\"\n              />\n            ))}\n          </Box>\n        </Paper>\n\n        {/* Chat Messages */}\n        <ChatContainer>\n          {loading && <LinearProgress />}\n          {chatHistory.map((message, index) => renderMessage(message, index))}\n        </ChatContainer>\n\n        {/* Input Area */}\n        <InputContainer>\n          <Box display=\"flex\" gap={2}>\n            <TextField\n              fullWidth\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder={selectedDocs.length ? \"Ask a question...\" : \"Select documents to start\"}\n              disabled={!selectedDocs.length || loading}\n              variant=\"outlined\"\n              size=\"medium\"\n            />\n            <Button\n              variant=\"contained\"\n              endIcon={<Send />}\n              disabled={!query.trim() || !selectedDocs.length || loading}\n              onClick={handleQuerySubmit}\n            >\n              Send\n            </Button>\n          </Box>\n        </InputContainer>\n      </Main>\n    </Box>\n    </ThemeProvider>\n  );\n}\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}