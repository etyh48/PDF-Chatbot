{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus, FaComments } from \"react-icons/fa\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const renderChatMessage = chat => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message ai-message align-self-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content p-3 rounded-3\",\n      children: /*#__PURE__*/_jsxDEV(MessageFormatter, {\n        content: chat.response,\n        context: chat.context,\n        selectedDocs: selectedDocs,\n        openPdfPage: openPdfPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([fetchDocuments(), fetchChats()]);\n    };\n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n\n  // Add these two new helper functions here:\n\n  const clearChat = async () => {\n    if (!selectedChat) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from(\"chats\").delete().eq(\"id\", selectedChat.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n      setSelectedChat(null);\n      await fetchChats(); // Refresh the chat list\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('chats').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n  const fetchChatMessages = async chatId => {\n    if (!chatId) return;\n    setIsHistoryLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"chat_messages\").select(\"*\").eq(\"chat_id\", chatId).order(\"created_at\", {\n        ascending: true\n      });\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('documents').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Upload to storage\n        const {\n          data: uploadData,\n          error: uploadError\n        } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: {\n            publicUrl\n          }\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({\n          data: arrayBuffer\n        }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const {\n          data: docData,\n          error: docError\n        } = await supabase.from(\"documents\").insert({\n          filename: file.name,\n          file_url: publicUrl,\n          total_pages: totalPages\n        }).select().single();\n        if (docError) throw docError;\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map(item => item.str).join(\" \");\n          fullText.push({\n            text: pageText,\n            pageNumber: i\n          });\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: i / totalPages * 100\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n          },\n          body: JSON.stringify({\n            documentId: docData.id,\n            pages: fullText\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChatSelect = async chat => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => documents.find(doc => doc.id === id)).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n\n  // Update the New Chat button handler\n  // Modify handleNewChat\n  const handleNewChat = async () => {\n    try {\n      // Create a new chat entry first\n      const {\n        data: newChat,\n        error: chatError\n      } = await supabase.from('chats').insert({\n        title: 'New Chat',\n        created_at: new Date().toISOString()\n      }).select().single();\n      if (chatError) throw chatError;\n\n      // Store the initialization message in chat_messages\n      const {\n        error: messageError\n      } = await supabase.from('chat_messages').insert({\n        chat_id: newChat.id,\n        content: 'Chat Started',\n        type: 'system',\n        created_at: new Date().toISOString()\n      });\n      if (messageError) throw messageError;\n      setCurrentChatId(newChat.id);\n      setChatHistory([]);\n      setSelectedDocs([]);\n\n      // Fetch the new chat's messages\n      await fetchChatMessages(newChat.id);\n    } catch (error) {\n      console.error('Error creating new chat:', error);\n      alert('Error creating new chat');\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n  {/* Update handleQuerySubmit to remove the event parameter */}\n  const handleQuerySubmit = async () => {\n    if (!query.trim() || selectedDocs.length === 0) return;\n\n    // If no current chat, create one\n    if (!currentChatId) {\n      await handleNewChat();\n    }\n    setLoading(true);\n    try {\n      const documentIds = selectedDocs.map(doc => parseInt(doc.id));\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      const result = await response.json();\n\n      // Store the user's query\n      const {\n        error: userMessageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: currentChatId,\n        content: query.trim(),\n        type: 'user',\n        created_at: new Date().toISOString()\n      });\n      if (userMessageError) throw userMessageError;\n\n      // Store the AI's response\n      const {\n        error: aiMessageError\n      } = await supabase.from(\"chat_messages\").insert({\n        chat_id: currentChatId,\n        content: result.answer,\n        type: 'assistant',\n        context: result.context,\n        created_at: new Date().toISOString()\n      });\n      if (aiMessageError) throw aiMessageError;\n\n      // Update chat title if it's the first message\n      if (chatHistory.length === 0) {\n        const {\n          error: updateError\n        } = await supabase.from('chats').update({\n          title: query.trim()\n        }).eq('id', currentChatId);\n        if (updateError) throw updateError;\n      }\n\n      // Fetch updated chat messages\n      await fetchChatMessages(currentChatId);\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update fetchChatHistory to work with integer IDs\n  const fetchChatHistory = async chatId => {\n    setIsHistoryLoading(true);\n    try {\n      let query = supabase.from(\"chat_history\").select(\"*\").order(\"created_at\", {\n        ascending: true\n      });\n\n      // Only add the chat_id filter if it exists\n      if (chatId) {\n        query = query.eq(\"chat_id\", chatId);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 19\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload \", selectedFiles.length ? `(${selectedFiles.length})` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 13\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: \"150px\"\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: \"4px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\",\n              onClick: handleNewChat,\n              children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 15\n              }, this), \" New Chat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-list\",\n              children: Array.from(new Set(chatHistory.map(ch => ch.chat_id))).map(chatId => {\n                const firstMessage = chatHistory.find(ch => ch.chat_id === chatId);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `chat-item p-3 rounded mb-2 cursor-pointer ${currentChatId === chatId ? \"selected\" : \"\"}`,\n                  onClick: () => {\n                    setCurrentChatId(chatId);\n                    fetchChatHistory(chatId);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(FaComments, {\n                      className: \"text-primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-preview\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"chat-title text-truncate\",\n                        children: (firstMessage === null || firstMessage === void 0 ? void 0 : firstMessage.query) || `Chat ${chatId}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-muted\",\n                        children: new Date(firstMessage === null || firstMessage === void 0 ? void 0 : firstMessage.created_at).toLocaleDateString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 21\n                  }, this)\n                }, chatId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"documents-list p-3\",\n            children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n                onClick: () => handleDocumentSelect(doc),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedDocs.some(d => d.id === doc.id),\n                  onChange: () => handleDocumentSelect(doc),\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FaFilePdf, {\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-truncate\",\n                  children: doc.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link text-danger p-1 delete-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(doc);\n                },\n                children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedDocs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Selected Documents (\", selectedDocs.length, \"):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: selectedDocs.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                onClick: clearChat,\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this), \" Clear Chat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Select documents to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 19\n              }, this), renderChatMessage(chat)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4 border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleQuerySubmit();\n            },\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length > 0 ? \"Ask a question about the selected documents...\" : \"Select at least one document first\",\n              disabled: selectedDocs.length === 0 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: selectedDocs.length === 0 || loading || !query.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"6Wm1redZrPzDhNiCt/Tgeyb7KmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","FaPlus","FaComments","pdfjsLib","getDocument","MessageFormatter","ChatHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","selectedDocs","setSelectedDocs","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","chats","setChats","selectedChat","setSelectedChat","isCreatingNewChat","setIsCreatingNewChat","currentChatId","setCurrentChatId","renderChatMessage","chat","className","children","content","response","context","openPdfPage","fileName","_jsxFileName","lineNumber","columnNumber","fetchInitialData","Promise","all","fetchDocuments","fetchChats","current","scrollIntoView","behavior","fetchChatHistory","id","handleDocumentSelect","doc","prev","isSelected","some","d","filter","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","data","signedUrlData","storage","createSignedUrl","split","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","select","order","ascending","fetchChatMessages","chatId","handleDelete","filename","file_url","storageError","remove","deleteError","handleFileChange","event","files","Array","target","file","isValidType","type","isValidSize","size","name","handleUpload","length","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","single","fullText","i","getPage","textContent","getTextContent","pageText","items","map","item","str","join","push","text","fetch","method","headers","Authorization","body","JSON","stringify","documentId","pages","ok","errorText","Error","message","handleChatSelect","document_ids","find","Boolean","handleNewChat","newChat","chatError","title","created_at","toISOString","messageError","chat_id","handleQuerySubmit","trim","documentIds","result","json","userMessageError","aiMessageError","answer","updateError","update","accept","multiple","onChange","disabled","htmlFor","onClick","index","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","Set","ch","firstMessage","toLocaleDateString","checked","e","stopPropagation","ref","onSubmit","preventDefault","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n\nimport { FaUpload, FaFilePdf, FaTrash, FaPlus, FaComments  } from \"react-icons/fa\";\n\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport MessageFormatter from './components/MessageFormatter';\nimport ChatHistory from \"./components/ChatHistory\";\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isCreatingNewChat, setIsCreatingNewChat] = useState(false);\n  const [currentChatId, setCurrentChatId] = useState(null);\n\n  const renderChatMessage = (chat) => (\n    <div className=\"message ai-message align-self-start\">\n      <div className=\"message-content p-3 rounded-3\">\n        <MessageFormatter \n          content={chat.response}\n          context={chat.context}\n          selectedDocs={selectedDocs}\n          openPdfPage={openPdfPage}\n        />\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    // Fetch both documents and chats when component mounts\n    const fetchInitialData = async () => {\n      await Promise.all([\n        fetchDocuments(),\n        fetchChats()\n      ]);\n    };\n    \n    fetchInitialData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  // Add this function to handle multiple document selection\nconst handleDocumentSelect = (doc) => {\n  setSelectedDocs(prev => {\n    const isSelected = prev.some(d => d.id === doc.id);\n    if (isSelected) {\n      return prev.filter(d => d.id !== doc.id);\n    } else {\n      return [...prev, doc];\n    }\n  });\n};\n\n\n  // Add these two new helper functions here:\n\n\n  const clearChat = async () => {\n  if (!selectedChat) return;\n\n  try {\n    // Delete from database\n    const { error } = await supabase\n      .from(\"chats\")\n      .delete()\n      .eq(\"id\", selectedChat.id);\n\n    if (error) throw error;\n\n    // Clear local state\n    setChatHistory([]);\n    setSelectedChat(null);\n    await fetchChats(); // Refresh the chat list\n\n  } catch (error) {\n    console.error(\"Error clearing chat:\", error);\n    alert(\"Error clearing chat history\");\n  }\n};\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null,\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page,\n        });\n\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null,\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChats = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      setChats(data || []);\n    } catch (error) {\n      console.error('Error fetching chats:', error);\n    }\n  };\n\n  const fetchChatMessages = async (chatId) => {\n    if (!chatId) return;\n    \n    setIsHistoryLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from(\"chat_messages\")\n        .select(\"*\")\n        .eq(\"chat_id\", chatId)\n        .order(\"created_at\", { ascending: true });\n  \n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat messages:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // const handleDocumentSelect = async (doc) => {\n  //   setSelectedDoc(doc);\n  //   await fetchChatHistory(doc.id);\n  // };\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('documents')\n        .select('*')\n        .order('created_at', { ascending: false });\n  \n      if (error) throw error;\n      console.log('Fetched documents:', data); // For debugging\n      setDocuments(data || []);\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter((file) => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n\n      return isValidType && isValidSize;\n    });\n\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n\n    setLoading(true);\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n\n        // Upload to storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n          .from(\"pdfs\")\n          .upload(`${Date.now()}_${file.name}`, file);\n\n        if (uploadError) throw uploadError;\n\n        // Get public URL\n        const {\n          data: { publicUrl },\n        } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n        // Process PDF content\n        const arrayBuffer = await file.arrayBuffer();\n        const pdf = await getDocument({ data: arrayBuffer }).promise;\n        const totalPages = pdf.numPages;\n\n        // Create document record with total pages\n        const { data: docData, error: docError } = await supabase\n          .from(\"documents\")\n          .insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages,\n          })\n          .select()\n          .single();\n\n        if (docError) throw docError;\n\n        let fullText = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          const pageText = textContent.items.map((item) => item.str).join(\" \");\n\n          fullText.push({\n            text: pageText,\n            pageNumber: i,\n          });\n\n          setUploadProgress((prev) => ({\n            ...prev,\n            [file.name]: (i / totalPages) * 100,\n          }));\n        }\n\n        // Process with edge function\n        const response = await fetch(\n          `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText,\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to process ${file.name}: ${errorText}`);\n        }\n      }\n\n      setSelectedFiles([]);\n      setUploadProgress({});\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChatSelect = async (chat) => {\n    setSelectedChat(chat);\n    setSelectedDocs(chat.document_ids.map(id => \n      documents.find(doc => doc.id === id)\n    ).filter(Boolean));\n    await fetchChatHistory(chat.id);\n  };\n  \n  // Update the New Chat button handler\n  // Modify handleNewChat\n  const handleNewChat = async () => {\n    try {\n      // Create a new chat entry first\n      const { data: newChat, error: chatError } = await supabase\n        .from('chats')\n        .insert({\n          title: 'New Chat',\n          created_at: new Date().toISOString()\n        })\n        .select()\n        .single();\n  \n      if (chatError) throw chatError;\n  \n      // Store the initialization message in chat_messages\n      const { error: messageError } = await supabase\n        .from('chat_messages')\n        .insert({\n          chat_id: newChat.id,\n          content: 'Chat Started',\n          type: 'system',\n          created_at: new Date().toISOString()\n        });\n  \n      if (messageError) throw messageError;\n  \n      setCurrentChatId(newChat.id);\n      setChatHistory([]);\n      setSelectedDocs([]);\n      \n      // Fetch the new chat's messages\n      await fetchChatMessages(newChat.id);\n    } catch (error) {\n      console.error('Error creating new chat:', error);\n      alert('Error creating new chat');\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Update handleQuerySubmit to handle multiple documents\n{/* Update handleQuerySubmit to remove the event parameter */}\nconst handleQuerySubmit = async () => {\n  if (!query.trim() || selectedDocs.length === 0) return;\n\n  // If no current chat, create one\n  if (!currentChatId) {\n    await handleNewChat();\n  }\n\n  setLoading(true);\n  try {\n    const documentIds = selectedDocs.map(doc => parseInt(doc.id));\n    \n    const response = await fetch(\n      `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: documentIds\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n\n    const result = await response.json();\n\n    // Store the user's query\n    const { error: userMessageError } = await supabase\n      .from(\"chat_messages\")\n      .insert({\n        chat_id: currentChatId,\n        content: query.trim(),\n        type: 'user',\n        created_at: new Date().toISOString()\n      });\n\n    if (userMessageError) throw userMessageError;\n\n    // Store the AI's response\n    const { error: aiMessageError } = await supabase\n      .from(\"chat_messages\")\n      .insert({\n        chat_id: currentChatId,\n        content: result.answer,\n        type: 'assistant',\n        context: result.context,\n        created_at: new Date().toISOString()\n      });\n\n    if (aiMessageError) throw aiMessageError;\n\n    // Update chat title if it's the first message\n    if (chatHistory.length === 0) {\n      const { error: updateError } = await supabase\n        .from('chats')\n        .update({ title: query.trim() })\n        .eq('id', currentChatId);\n\n      if (updateError) throw updateError;\n    }\n\n    // Fetch updated chat messages\n    await fetchChatMessages(currentChatId);\n    setQuery(\"\");\n  } catch (error) {\n    console.error(\"Query error:\", error);\n    alert(\"Error processing query: \" + error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n\n// Update fetchChatHistory to work with integer IDs\nconst fetchChatHistory = async (chatId) => {\n  setIsHistoryLoading(true);\n  try {\n    let query = supabase\n      .from(\"chat_history\")\n      .select(\"*\")\n      .order(\"created_at\", { ascending: true });\n    \n    // Only add the chat_id filter if it exists\n    if (chatId) {\n      query = query.eq(\"chat_id\", chatId);\n    }\n\n    const { data, error } = await query;\n\n    if (error) throw error;\n    setChatHistory(data || []);\n  } catch (error) {\n    console.error(\"Error fetching chat history:\", error);\n  } finally {\n    setIsHistoryLoading(false);\n  }\n};\n\nreturn (\n  <div className=\"container-fluid vh-100\">\n    <div className=\"row h-100\">\n      {/* Single Sidebar */}\n      <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n        <div className=\"sticky-top\">\n          {/* PDF Documents Section */}\n          <div className=\"p-4 border-bottom\">\n            <h5 className=\"mb-3\">PDF Documents</h5>\n            <div className=\"d-flex gap-2 mb-3\">\n              <div className=\"upload-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf\"\n                  multiple\n                  onChange={handleFileChange}\n                  className=\"d-none\"\n                  id=\"fileInput\"\n                  disabled={loading}\n                />\n                <label\n                  htmlFor=\"fileInput\"\n                  className=\"btn btn-outline-primary d-flex align-items-center gap-2\"\n                >\n                  <FaUpload />\n                  Choose Files\n                </label>\n              </div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleUpload}\n                disabled={!selectedFiles.length || loading}\n              >\n                Upload {selectedFiles.length ? `(${selectedFiles.length})` : \"\"}\n              </button>\n            </div>\n\n            {/* Selected Files List */}\n            {selectedFiles.length > 0 && (\n              <div className=\"selected-files mb-3\">\n                {Array.from(selectedFiles).map((file, index) => (\n                  <div\n                    key={index}\n                    className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\"\n                  >\n                    <div className=\"d-flex align-items-center\">\n                      <FaFilePdf className=\"text-primary me-2\" />\n                      <span className=\"text-truncate\" style={{ maxWidth: \"150px\" }}>\n                        {file.name}\n                      </span>\n                    </div>\n                    <button\n                      className=\"btn btn-link text-danger p-1\"\n                      onClick={() => {\n                        const newFiles = Array.from(selectedFiles).filter(\n                          (_, i) => i !== index\n                        );\n                        setSelectedFiles(newFiles);\n                      }}\n                    >\n                      <FaTrash size={14} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Upload Progress */}\n            {Object.entries(uploadProgress).map(([filename, progress]) => (\n              <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                <div className=\"small text-muted mb-1\">{filename}</div>\n                <div className=\"progress\" style={{ height: \"4px\" }}>\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Chat History Section */}\n          <div className=\"p-4\">\n            <button \n              className=\"btn btn-primary w-100 mb-4 d-flex align-items-center justify-content-center gap-2\"\n              onClick={handleNewChat}\n            >\n              <FaPlus size={14} /> New Chat\n            </button>\n\n            <div className=\"chat-list\">\n              {Array.from(new Set(chatHistory.map(ch => ch.chat_id))).map(chatId => {\n                const firstMessage = chatHistory.find(ch => ch.chat_id === chatId);\n                return (\n                  <div\n                    key={chatId}\n                    className={`chat-item p-3 rounded mb-2 cursor-pointer ${\n                      currentChatId === chatId ? \"selected\" : \"\"\n                    }`}\n                    onClick={() => {\n                      setCurrentChatId(chatId);\n                      fetchChatHistory(chatId);\n                    }}\n                  >\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <FaComments className=\"text-primary\" />\n                      <div className=\"chat-preview\">\n                        <div className=\"chat-title text-truncate\">\n                          {firstMessage?.query || `Chat ${chatId}`}\n                        </div>\n                        <small className=\"text-muted\">\n                          {new Date(firstMessage?.created_at).toLocaleDateString()}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Documents List */}\n          <div className=\"documents-list p-3\">\n            {documents.map((doc) => (\n              <div\n                key={doc.id}\n                className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                  selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"\n                }`}\n              >\n                <div\n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedDocs.some(d => d.id === doc.id)}\n                    onChange={() => handleDocumentSelect(doc)}\n                    className=\"me-2\"\n                  />\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n                <button\n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleDelete(doc);\n                  }}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n        {/* Chat Header */}\n        <div className=\"chat-header p-4 bg-light border-bottom\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            {selectedDocs.length > 0 ? (\n              <>\n                <h6 className=\"mb-0\">\n                  Selected Documents ({selectedDocs.length}):\n                  <br />\n                  <small className=\"text-muted\">\n                    {selectedDocs.map(doc => doc.filename).join(\", \")}\n                  </small>\n                </h6>\n                {chatHistory.length > 0 && (\n                  <button\n                    className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                    onClick={clearChat}\n                  >\n                    <FaTrash /> Clear Chat\n                  </button>\n                )}\n              </>\n            ) : (\n              <h5 className=\"mb-0\">Select documents to start chatting</h5>\n            )}\n          </div>\n        </div>\n\n        {/* Chat Messages */}\n        <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n          {isHistoryLoading ? (\n            <div className=\"text-center text-muted\">\n              Loading chat history...\n            </div>\n          ) : (\n            <div className=\"d-flex flex-column gap-4\">\n              {chatHistory.map((chat, index) => (\n                <div\n                  key={index}\n                  className=\"d-flex flex-column gap-3\"\n                  ref={index === chatHistory.length - 1 ? latestMessageRef : null}\n                >\n                  <div className=\"message user-message align-self-end\">\n                    <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                      {chat.query}\n                    </div>\n                  </div>\n                  {renderChatMessage(chat)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Chat Input */}\n        <div className=\"chat-input p-4 border-top\">\n        <form \n          onSubmit={(e) => {\n            e.preventDefault();\n            handleQuerySubmit();\n          }} \n          className=\"d-flex gap-3\"\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder={\n              selectedDocs.length > 0\n                ? \"Ask a question about the selected documents...\"\n                : \"Select at least one document first\"\n            }\n            disabled={selectedDocs.length === 0 || loading}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary px-4\"\n            disabled={selectedDocs.length === 0 || loading || !query.trim()}\n          >\n            Send\n          </button>\n        </form>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}