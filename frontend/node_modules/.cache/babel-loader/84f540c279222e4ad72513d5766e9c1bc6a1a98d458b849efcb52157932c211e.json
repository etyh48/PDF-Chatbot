{"ast":null,"code":"var _jsxFileName = \"/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n// At the top of App.js, add this import:\nimport { FaUpload } from \"react-icons/fa\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [selectedDocs, setSelectedDocs] = useState([]); // New state for multiple document selection\n  const [isRawMode, setIsRawMode] = useState(false); // New state for raw extraction mode\n  const [extractedData, setExtractedData] = useState(null); // New state for extracted JSON data\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n  const truncateContext = (text, maxLength = 200) => {\n    if (!text) return \"\";\n\n    // If text is shorter than max length, return as is\n    if (text.length <= maxLength) return text;\n\n    // Find the last complete sentence within the limit\n    const truncated = text.substring(0, maxLength);\n    const lastPeriod = truncated.lastIndexOf(\".\");\n    const lastQuestion = truncated.lastIndexOf(\"?\");\n    const lastExclamation = truncated.lastIndexOf(\"!\");\n\n    // Find the last sentence end\n    const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n    if (lastSentenceEnd > 0) {\n      // Return up to the last sentence end\n      return text.substring(0, lastSentenceEnd + 1) + \"...\";\n    }\n\n    // If no sentence end found, truncate at word boundary\n    const lastSpace = truncated.lastIndexOf(\" \");\n    return text.substring(0, lastSpace) + \"...\";\n  };\n\n  // Add these two new helper functions here:\n  const formatAIResponse = response => {\n    // Split by double newlines to separate sections\n    const sections = response.split(\"\\n\\n\");\n    const formattedSections = sections.map((section, index) => {\n      // Check if section is a bullet point list\n      if (section.includes(\"• \") || section.includes(\"* \")) {\n        const listItems = section.split(/[•*]\\s/).filter(item => item.trim());\n        return `<div class=\"section\">\n            <ul>\n              ${listItems.map(item => `<li>${formatText(item.trim())}</li>`).join(\"\")}\n            </ul>\n          </div>`;\n      }\n\n      // Format normal paragraphs\n      return `<div class=\"section\"><p>${formatText(section)}</p></div>`;\n    });\n    return formattedSections.join(\"\");\n  };\n  const formatText = text => {\n    // First handle bold text (text between pairs of asterisks)\n    let formattedText = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n\n    // Then format numbers\n    formattedText = formattedText.replace(/(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g, '<span class=\"numeric-value\">$1</span>');\n    return formattedText;\n  };\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n    try {\n      // Delete from database\n      const {\n        error\n      } = await supabase.from(\"chat_history\").delete().eq(\"document_id\", selectedDoc.id);\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const {\n        data: signedUrlData,\n        error\n      } = await supabase.storage.from(\"pdfs\").createSignedUrl(url.split(\"/\").pop(), 3600);\n      if (error) throw error;\n      if (signedUrlData !== null && signedUrlData !== void 0 && signedUrlData.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page\n        });\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(signedUrlData.signedUrl)}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async documentId => {\n    setIsHistoryLoading(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"chat_history\").select(\"*\").eq(\"document_id\", documentId).order(\"created_at\", {\n        ascending: true\n      });\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // Modified document selection handler for multiple selections\n  const handleDocumentSelect = doc => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n  const handleDelete = async doc => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const {\n        error: storageError\n      } = await supabase.storage.from(\"pdfs\").remove([filename]);\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const {\n        error: deleteError\n      } = await supabase.from(\"documents\").delete().eq(\"id\", doc.id);\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n  const fetchDocuments = async () => {\n    const {\n      data\n    } = await supabase.from(\"documents\").select(\"*\");\n    setDocuments(data || []);\n  };\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).filter(file => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n      return isValidType && isValidSize;\n    });\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setLoading(true);\n    const uploadErrors = [];\n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n        try {\n          // Upload to storage\n          const {\n            data: uploadData,\n            error: uploadError\n          } = await supabase.storage.from(\"pdfs\").upload(`${Date.now()}_${file.name}`, file);\n          if (uploadError) throw uploadError;\n\n          // Get public URL\n          const {\n            data: {\n              publicUrl\n            }\n          } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n\n          // Process PDF content\n          const arrayBuffer = await file.arrayBuffer();\n          const pdf = await getDocument({\n            data: arrayBuffer\n          }).promise;\n          const totalPages = pdf.numPages;\n\n          // Create document record with total pages\n          const {\n            data: docData,\n            error: docError\n          } = await supabase.from(\"documents\").insert({\n            filename: file.name,\n            file_url: publicUrl,\n            total_pages: totalPages\n          }).select().single();\n          if (docError) throw docError;\n          let fullText = [];\n          for (let i = 1; i <= totalPages; i++) {\n            const page = await pdf.getPage(i);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map(item => item.str).join(\" \");\n            fullText.push({\n              text: pageText,\n              pageNumber: i,\n              data: arrayBuffer // Adding the PDF data for layout analysis\n            });\n            setUploadProgress(prev => ({\n              ...prev,\n              [file.name]: i / totalPages * 100\n            }));\n          }\n\n          // Process with edge function\n          const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n              \"apikey\": process.env.REACT_APP_SUPABASE_ANON_KEY\n            },\n            body: JSON.stringify({\n              documentId: docData.id,\n              pages: fullText\n            })\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Failed to process ${file.name}: ${errorText}`);\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          uploadErrors.push(`${file.name}: ${error.message}`);\n          continue; // Continue with next file even if this one failed\n        }\n      }\n      setSelectedFiles([]);\n      setUploadProgress({});\n      await fetchDocuments();\n\n      // Show any errors that occurred during upload\n      if (uploadErrors.length > 0) {\n        alert(`Some files failed to upload:\\n${uploadErrors.join('\\n')}`);\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Modified query handler to support multi-document queries and raw extraction\n  const handleQuerySubmit = async e => {\n    e.preventDefault();\n    if (!query.trim() || selectedDocs.length === 0) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`\n        },\n        body: JSON.stringify({\n          query: query.trim(),\n          documentIds: selectedDocs.map(doc => doc.id),\n          rawMode: isRawMode\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to process query: \" + (await response.text()));\n      }\n      const result = await response.json();\n      if (isRawMode) {\n        setExtractedData(result.extractedData);\n      } else {\n        // Create new chat entries for each document\n        for (const docResult of result.results) {\n          const newEntry = {\n            document_id: docResult.documentId,\n            query: query.trim(),\n            response: docResult.answer,\n            context: docResult.context\n          };\n\n          // Store in database\n          const {\n            error: insertError\n          } = await supabase.from(\"chat_history\").insert(newEntry);\n          if (insertError) throw insertError;\n        }\n\n        // Update chat history\n        await Promise.all(selectedDocs.map(doc => fetchChatHistory(doc.id)));\n      }\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sticky-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"PDF Documents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".pdf\",\n                  multiple: true,\n                  onChange: handleFileChange,\n                  className: \"d-none\",\n                  id: \"fileInput\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  className: \"btn btn-outline-primary d-flex align-items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 21\n                  }, this), \"Choose Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                disabled: !selectedFiles.length || loading,\n                children: [\"Upload\", \" \", selectedFiles.length ? `(${selectedFiles.length})` : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-files mb-3\",\n              children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {\n                    className: \"text-primary me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-truncate\",\n                    style: {\n                      maxWidth: \"150px\"\n                    },\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-danger p-1\",\n                  onClick: () => {\n                    const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                    setSelectedFiles(newFiles);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), Object.entries(uploadProgress).map(([filename, progress]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-progress-wrapper mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-1\",\n                children: filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                style: {\n                  height: \"4px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)]\n            }, filename, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"documents-list p-3\",\n          children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `document-item d-flex align-items-center p-2 rounded mb-2 border ${selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\",\n              onClick: () => handleDocumentSelect(doc),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedDocs.some(d => d.id === doc.id),\n                onChange: () => handleDocumentSelect(doc),\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FaFilePdf, {\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-truncate\",\n                children: doc.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link text-danger p-1 delete-btn\",\n              onClick: () => handleDelete(doc),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header p-4 bg-light border-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: selectedDocs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: [\"Selected Documents: \", selectedDocs.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: selectedDocs.map(doc => doc.filename).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check form-switch\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    id: \"rawModeSwitch\",\n                    checked: isRawMode,\n                    onChange: e => setIsRawMode(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"rawModeSwitch\",\n                    children: \"Raw Extraction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), chatHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\",\n                  onClick: clearChat,\n                  children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 25\n                  }, this), \" Clear Chat\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Select documents to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages flex-grow-1 p-4 overflow-auto\",\n          children: isHistoryLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-muted\",\n            children: \"Loading chat history...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this) : isRawMode && extractedData ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-light p-3 rounded\",\n            children: JSON.stringify(extractedData, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column gap-4\",\n            children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column gap-3\",\n              ref: index === chatHistory.length - 1 ? latestMessageRef : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message user-message align-self-end\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 bg-primary text-white rounded-3\",\n                  children: chat.query\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message ai-message align-self-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content p-3 rounded-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: formatAIResponse(chat.response)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 25\n                  }, this), chat.context && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"context-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: \"Relevant Source Excerpts:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 626,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"context-content\",\n                      children: chat.context.slice(0, 5).map((ctx, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"context-item d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"mb-0 small\",\n                          children: truncateContext(ctx.content)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 635,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-outline-primary btn-sm flex-shrink-0\",\n                          onClick: () => openPdfPage(selectedDoc.file_url, ctx.page_number),\n                          children: [\"Page \", ctx.page_number]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 638,\n                          columnNumber: 35\n                        }, this)]\n                      }, idx, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input p-4 border-top\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleQuerySubmit,\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              placeholder: selectedDocs.length > 0 ? isRawMode ? \"Enter extraction query (e.g., 'Extract balance sheet from all documents')...\" : \"Ask a question...\" : \"Select documents first\",\n              disabled: !selectedDocs.length || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary px-4\",\n              disabled: !selectedDocs.length || loading || !query.trim(),\n              children: isRawMode ? \"Extract\" : \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), pdfViewerState.isOpen && /*#__PURE__*/_jsxDEV(PDFViewer, {\n      url: pdfViewerState.url,\n      pageNumber: pdfViewerState.pageNumber,\n      onClose: closePdfViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9CMjDVe/z6u1syy++a1xkuZLVIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createClient","PDFViewer","FaUpload","FaFilePdf","FaTrash","pdfjsLib","getDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","App","_s","selectedFiles","setSelectedFiles","documents","setDocuments","selectedDoc","setSelectedDoc","query","setQuery","chatHistory","setChatHistory","loading","setLoading","uploadProgress","setUploadProgress","isHistoryLoading","setIsHistoryLoading","latestMessageRef","selectedDocs","setSelectedDocs","isRawMode","setIsRawMode","extractedData","setExtractedData","current","scrollIntoView","behavior","fetchChatHistory","id","truncateContext","text","maxLength","length","truncated","substring","lastPeriod","lastIndexOf","lastQuestion","lastExclamation","lastSentenceEnd","Math","max","lastSpace","formatAIResponse","response","sections","split","formattedSections","map","section","index","includes","listItems","filter","item","trim","formatText","join","formattedText","replace","clearChat","error","from","delete","eq","console","alert","pdfViewerState","setPdfViewerState","isOpen","url","pageNumber","openPdfPage","data","signedUrlData","storage","createSignedUrl","pop","signedUrl","page","parseInt","log","viewerUrl","encodeURIComponent","window","open","closePdfViewer","documentId","select","order","ascending","handleDocumentSelect","doc","prev","isSelected","some","d","handleDelete","filename","file_url","storageError","remove","deleteError","fetchDocuments","handleFileChange","event","files","Array","target","file","isValidType","type","isValidSize","size","name","handleUpload","uploadErrors","uploadData","uploadError","upload","Date","now","publicUrl","getPublicUrl","path","arrayBuffer","pdf","promise","totalPages","numPages","docData","docError","insert","total_pages","single","fullText","i","getPage","textContent","getTextContent","pageText","items","str","push","fetch","method","headers","body","JSON","stringify","pages","ok","errorText","Error","message","handleQuerySubmit","e","preventDefault","Authorization","documentIds","rawMode","result","json","docResult","results","newEntry","document_id","answer","context","insertError","Promise","all","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","disabled","htmlFor","onClick","style","maxWidth","newFiles","_","Object","entries","progress","height","role","width","checked","chat","ref","dangerouslySetInnerHTML","__html","slice","ctx","idx","content","page_number","onSubmit","value","placeholder","onClose","_c","$RefreshReg$"],"sources":["/Users/ryantay/Desktop/Merctrans/pdf-reader/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"./App.css\";\nimport PDFViewer from \"./components/PDFViewer\";\n// At the top of App.js, add this import:\nimport { FaUpload } from \"react-icons/fa\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport { FaTrash } from \"react-icons/fa\";\n\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { getDocument } from \"pdfjs-dist\";\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@4.9.155/build/pdf.worker.min.mjs\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nfunction App() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [isHistoryLoading, setIsHistoryLoading] = useState(false);\n  const latestMessageRef = useRef(null);\n  const [selectedDocs, setSelectedDocs] = useState([]); // New state for multiple document selection\n  const [isRawMode, setIsRawMode] = useState(false); // New state for raw extraction mode\n  const [extractedData, setExtractedData] = useState(null); // New state for extracted JSON data\n\n  useEffect(() => {\n    if (latestMessageRef.current) {\n      latestMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (selectedDoc) {\n      fetchChatHistory(selectedDoc.id);\n    }\n  }, [selectedDoc]);\n\n  const truncateContext = (text, maxLength = 200) => {\n    if (!text) return \"\";\n\n    // If text is shorter than max length, return as is\n    if (text.length <= maxLength) return text;\n\n    // Find the last complete sentence within the limit\n    const truncated = text.substring(0, maxLength);\n    const lastPeriod = truncated.lastIndexOf(\".\");\n    const lastQuestion = truncated.lastIndexOf(\"?\");\n    const lastExclamation = truncated.lastIndexOf(\"!\");\n\n    // Find the last sentence end\n    const lastSentenceEnd = Math.max(lastPeriod, lastQuestion, lastExclamation);\n\n    if (lastSentenceEnd > 0) {\n      // Return up to the last sentence end\n      return text.substring(0, lastSentenceEnd + 1) + \"...\";\n    }\n\n    // If no sentence end found, truncate at word boundary\n    const lastSpace = truncated.lastIndexOf(\" \");\n    return text.substring(0, lastSpace) + \"...\";\n  };\n\n  // Add these two new helper functions here:\n  const formatAIResponse = (response) => {\n    // Split by double newlines to separate sections\n    const sections = response.split(\"\\n\\n\");\n\n    const formattedSections = sections.map((section, index) => {\n      // Check if section is a bullet point list\n      if (section.includes(\"• \") || section.includes(\"* \")) {\n        const listItems = section.split(/[•*]\\s/).filter((item) => item.trim());\n        return `<div class=\"section\">\n            <ul>\n              ${listItems\n                .map((item) => `<li>${formatText(item.trim())}</li>`)\n                .join(\"\")}\n            </ul>\n          </div>`;\n      }\n\n      // Format normal paragraphs\n      return `<div class=\"section\"><p>${formatText(section)}</p></div>`;\n    });\n\n    return formattedSections.join(\"\");\n  };\n\n  const formatText = (text) => {\n    // First handle bold text (text between pairs of asterisks)\n    let formattedText = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n\n    // Then format numbers\n    formattedText = formattedText.replace(\n      /(\\$?\\d+(?:,\\d{3})*(?:\\.\\d+)?(?:\\s*(?:million|billion|trillion))?)/g,\n      '<span class=\"numeric-value\">$1</span>'\n    );\n\n    return formattedText;\n  };\n\n  const clearChat = async () => {\n    if (!selectedDoc) return;\n\n    try {\n      // Delete from database\n      const { error } = await supabase\n        .from(\"chat_history\")\n        .delete()\n        .eq(\"document_id\", selectedDoc.id);\n\n      if (error) throw error;\n\n      // Clear local state\n      setChatHistory([]);\n    } catch (error) {\n      console.error(\"Error clearing chat:\", error);\n      alert(\"Error clearing chat history\");\n    }\n  };\n\n  const [pdfViewerState, setPdfViewerState] = useState({\n    isOpen: false,\n    url: null,\n    pageNumber: null,\n  });\n\n  // Update the openPdfPage function\n  const openPdfPage = async (url, pageNumber) => {\n    try {\n      const { data: signedUrlData, error } = await supabase.storage\n        .from(\"pdfs\")\n        .createSignedUrl(url.split(\"/\").pop(), 3600);\n\n      if (error) throw error;\n\n      if (signedUrlData?.signedUrl) {\n        // Ensure pageNumber is a valid number\n        const page = parseInt(pageNumber, 10) || 1;\n\n        // Log for debugging\n        console.log(\"Opening PDF:\", {\n          url: signedUrlData.signedUrl,\n          pageNumber: page,\n        });\n\n        const viewerUrl = `/pdfjs/viewer.html?file=${encodeURIComponent(\n          signedUrlData.signedUrl\n        )}&page=${page}`;\n        window.open(viewerUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"Error opening PDF:\", error);\n      alert(\"Error opening PDF\");\n    }\n  };\n\n  // Add close function\n  const closePdfViewer = () => {\n    setPdfViewerState({\n      isOpen: false,\n      url: null,\n      pageNumber: null,\n    });\n  };\n\n  // Add this function to fetch chat history\n  const fetchChatHistory = async (documentId) => {\n    setIsHistoryLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from(\"chat_history\")\n        .select(\"*\")\n        .eq(\"document_id\", documentId)\n        .order(\"created_at\", { ascending: true });\n\n      if (error) throw error;\n      setChatHistory(data || []);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    } finally {\n      setIsHistoryLoading(false);\n    }\n  };\n\n  // Modified document selection handler for multiple selections\n  const handleDocumentSelect = (doc) => {\n    setSelectedDocs(prev => {\n      const isSelected = prev.some(d => d.id === doc.id);\n      if (isSelected) {\n        return prev.filter(d => d.id !== doc.id);\n      } else {\n        return [...prev, doc];\n      }\n    });\n  };\n\n  const handleDelete = async (doc) => {\n    try {\n      // Delete from storage first\n      const filename = doc.file_url.split(\"/\").pop();\n      const { error: storageError } = await supabase.storage\n        .from(\"pdfs\")\n        .remove([filename]);\n\n      if (storageError) throw storageError;\n\n      // Delete document (will cascade delete chunks)\n      const { error: deleteError } = await supabase\n        .from(\"documents\")\n        .delete()\n        .eq(\"id\", doc.id);\n\n      if (deleteError) throw deleteError;\n\n      // Refresh documents list\n      fetchDocuments();\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      alert(\"Error deleting document\");\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  const fetchDocuments = async () => {\n    const { data } = await supabase.from(\"documents\").select(\"*\");\n    setDocuments(data || []);\n  };\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files).filter((file) => {\n      const isValidType = file.type === \"application/pdf\";\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\n\n      if (!isValidType) {\n        alert(`${file.name} is not a PDF file`);\n      }\n      if (!isValidSize) {\n        alert(`${file.name} exceeds 10MB size limit`);\n      }\n\n      return isValidType && isValidSize;\n    });\n\n    setSelectedFiles(files);\n  };\n\n  // In App.js, modify the fetch call in handleUpload:\n  // handleUpload in App.js\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n  \n    setLoading(true);\n    const uploadErrors = [];\n  \n    try {\n      for (const file of selectedFiles) {\n        setUploadProgress((prev) => ({ ...prev, [file.name]: 0 }));\n        \n        try {\n          // Upload to storage\n          const { data: uploadData, error: uploadError } = await supabase.storage\n            .from(\"pdfs\")\n            .upload(`${Date.now()}_${file.name}`, file);\n  \n          if (uploadError) throw uploadError;\n  \n          // Get public URL\n          const {\n            data: { publicUrl },\n          } = supabase.storage.from(\"pdfs\").getPublicUrl(uploadData.path);\n  \n          // Process PDF content\n          const arrayBuffer = await file.arrayBuffer();\n          const pdf = await getDocument({ data: arrayBuffer }).promise;\n          const totalPages = pdf.numPages;\n  \n          // Create document record with total pages\n          const { data: docData, error: docError } = await supabase\n            .from(\"documents\")\n            .insert({\n              filename: file.name,\n              file_url: publicUrl,\n              total_pages: totalPages,\n            })\n            .select()\n            .single();\n  \n          if (docError) throw docError;\n  \n          let fullText = [];\n          for (let i = 1; i <= totalPages; i++) {\n            const page = await pdf.getPage(i);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map((item) => item.str).join(\" \");\n  \n            fullText.push({\n              text: pageText,\n              pageNumber: i,\n              data: arrayBuffer, // Adding the PDF data for layout analysis\n            });\n  \n            setUploadProgress((prev) => ({\n              ...prev,\n              [file.name]: (i / totalPages) * 100,\n            }));\n          }\n  \n          // Process with edge function\n          const response = await fetch(\n            `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-pdf`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n                \"apikey\": process.env.REACT_APP_SUPABASE_ANON_KEY\n              },\n              body: JSON.stringify({\n                documentId: docData.id,\n                pages: fullText,\n              }),\n            }\n          );\n  \n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Failed to process ${file.name}: ${errorText}`);\n          }\n  \n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          uploadErrors.push(`${file.name}: ${error.message}`);\n          continue; // Continue with next file even if this one failed\n        }\n      }\n  \n      setSelectedFiles([]);\n      setUploadProgress({});\n      await fetchDocuments();\n  \n      // Show any errors that occurred during upload\n      if (uploadErrors.length > 0) {\n        alert(`Some files failed to upload:\\n${uploadErrors.join('\\n')}`);\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"Error uploading files: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Modify handleQuerySubmit to store chat history\n  // Modified query handler to support multi-document queries and raw extraction\n  const handleQuerySubmit = async (e) => {\n    e.preventDefault();\n    if (!query.trim() || selectedDocs.length === 0) return;\n\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_SUPABASE_URL}/functions/v1/process-query`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_SUPABASE_ANON_KEY}`,\n          },\n          body: JSON.stringify({\n            query: query.trim(),\n            documentIds: selectedDocs.map(doc => doc.id),\n            rawMode: isRawMode\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to process query: \" + await response.text());\n      }\n\n      const result = await response.json();\n\n      if (isRawMode) {\n        setExtractedData(result.extractedData);\n      } else {\n        // Create new chat entries for each document\n        for (const docResult of result.results) {\n          const newEntry = {\n            document_id: docResult.documentId,\n            query: query.trim(),\n            response: docResult.answer,\n            context: docResult.context,\n          };\n\n          // Store in database\n          const { error: insertError } = await supabase\n            .from(\"chat_history\")\n            .insert(newEntry);\n\n          if (insertError) throw insertError;\n        }\n\n        // Update chat history\n        await Promise.all(selectedDocs.map(doc => fetchChatHistory(doc.id)));\n      }\n\n      setQuery(\"\");\n    } catch (error) {\n      console.error(\"Query error:\", error);\n      alert(\"Error processing query: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container-fluid vh-100\">\n      <div className=\"row h-100\">\n        {/* Sidebar */}\n        <div className=\"col-md-3 col-lg-3 p-0 border-end bg-white sidebar\">\n          <div className=\"sticky-top\">\n            <div className=\"p-4 border-bottom\">\n              <h5 className=\"mb-3\">PDF Documents</h5>\n              <div className=\"d-flex gap-2 mb-3\">\n                <div className=\"upload-wrapper\">\n                  <input\n                    type=\"file\"\n                    accept=\".pdf\"\n                    multiple\n                    onChange={handleFileChange}\n                    className=\"d-none\"\n                    id=\"fileInput\"\n                    disabled={loading}\n                  />\n                  <label\n                    htmlFor=\"fileInput\"\n                    className=\"btn btn-outline-primary d-flex align-items-center gap-2\"\n                  >\n                    <FaUpload />\n                    Choose Files\n                  </label>\n                </div>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={handleUpload}\n                  disabled={!selectedFiles.length || loading}\n                >\n                  Upload{\" \"}\n                  {selectedFiles.length ? `(${selectedFiles.length})` : \"\"}\n                </button>\n              </div>\n\n              {/* Selected Files List */}\n              {selectedFiles.length > 0 && (\n                <div className=\"selected-files mb-3\">\n                  {Array.from(selectedFiles).map((file, index) => (\n                    <div\n                      key={index}\n                      className=\"selected-file d-flex justify-content-between align-items-center p-2 bg-light rounded mb-2\"\n                    >\n                      <div className=\"d-flex align-items-center\">\n                        <FaFilePdf className=\"text-primary me-2\" />\n                        <span\n                          className=\"text-truncate\"\n                          style={{ maxWidth: \"150px\" }}\n                        >\n                          {file.name}\n                        </span>\n                      </div>\n                      <button\n                        className=\"btn btn-link text-danger p-1\"\n                        onClick={() => {\n                          const newFiles = Array.from(selectedFiles).filter(\n                            (_, i) => i !== index\n                          );\n                          setSelectedFiles(newFiles);\n                        }}\n                      >\n                        <FaTrash size={14} />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {/* Upload Progress */}\n              {Object.entries(uploadProgress).map(([filename, progress]) => (\n                <div key={filename} className=\"upload-progress-wrapper mb-2\">\n                  <div className=\"small text-muted mb-1\">{filename}</div>\n                  <div className=\"progress\" style={{ height: \"4px\" }}>\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{ width: `${progress}%` }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Modified Documents List with Multi-select */}\n          <div className=\"documents-list p-3\">\n            {documents.map((doc) => (\n              <div\n                key={doc.id}\n                className={`document-item d-flex align-items-center p-2 rounded mb-2 border ${\n                  selectedDocs.some(d => d.id === doc.id) ? \"selected\" : \"\"\n                }`}\n              >\n                <div\n                  className=\"d-flex align-items-center flex-grow-1 gap-2 cursor-pointer\"\n                  onClick={() => handleDocumentSelect(doc)}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedDocs.some(d => d.id === doc.id)}\n                    onChange={() => handleDocumentSelect(doc)}\n                    className=\"me-2\"\n                  />\n                  <FaFilePdf className=\"text-danger\" />\n                  <span className=\"text-truncate\">{doc.filename}</span>\n                </div>\n                <button\n                  className=\"btn btn-link text-danger p-1 delete-btn\"\n                  onClick={() => handleDelete(doc)}\n                >\n                  <FaTrash />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Modified Chat Area */}\n        <div className=\"col-md-9 col-lg-9 p-0 d-flex flex-column h-100\">\n          {/* Modified Chat Header */}\n          <div className=\"chat-header p-4 bg-light border-bottom\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              {selectedDocs.length > 0 ? (\n                <>\n                  <h6 className=\"mb-0\">\n                    Selected Documents: {selectedDocs.length}\n                    <br />\n                    <small className=\"text-muted\">\n                      {selectedDocs.map(doc => doc.filename).join(\", \")}\n                    </small>\n                  </h6>\n                  <div className=\"d-flex gap-2\">\n                    <div className=\"form-check form-switch\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"rawModeSwitch\"\n                        checked={isRawMode}\n                        onChange={(e) => setIsRawMode(e.target.checked)}\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"rawModeSwitch\">\n                        Raw Extraction\n                      </label>\n                    </div>\n                    {chatHistory.length > 0 && (\n                      <button\n                        className=\"btn btn-outline-secondary btn-sm d-flex align-items-center gap-2\"\n                        onClick={clearChat}\n                      >\n                        <FaTrash /> Clear Chat\n                      </button>\n                    )}\n                  </div>\n                </>\n              ) : (\n                <h5 className=\"mb-0\">Select documents to start chatting</h5>\n              )}\n            </div>\n          </div>\n\n          {/* Modified Chat Messages */}\n          <div className=\"chat-messages flex-grow-1 p-4 overflow-auto\">\n            {isHistoryLoading ? (\n              <div className=\"text-center text-muted\">Loading chat history...</div>\n            ) : isRawMode && extractedData ? (\n              <pre className=\"bg-light p-3 rounded\">\n                {JSON.stringify(extractedData, null, 2)}\n              </pre>\n            ) : (\n              <div className=\"d-flex flex-column gap-4\">\n                {chatHistory.map((chat, index) => (\n                  <div\n                    key={index}\n                    className=\"d-flex flex-column gap-3\"\n                    ref={\n                      index === chatHistory.length - 1 ? latestMessageRef : null\n                    }\n                  >\n                    {/* User Message */}\n                    <div className=\"message user-message align-self-end\">\n                      <div className=\"message-content p-3 bg-primary text-white rounded-3\">\n                        {chat.query}\n                      </div>\n                    </div>\n\n                    {/* AI Message */}\n                    <div className=\"message ai-message align-self-start\">\n                      <div className=\"message-content p-3 rounded-3\">\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: formatAIResponse(chat.response),\n                          }}\n                        />\n\n                        {chat.context && (\n                          <div className=\"context-info\">\n                            <small className=\"text-muted\">\n                              Relevant Source Excerpts:\n                            </small>\n                            <div className=\"context-content\">\n                              {chat.context.slice(0, 5).map((ctx, idx) => (\n                                <div\n                                  key={idx}\n                                  className=\"context-item d-flex justify-content-between align-items-start gap-3 p-2 bg-white rounded mb-2\"\n                                >\n                                  <p className=\"mb-0 small\">\n                                    {truncateContext(ctx.content)}\n                                  </p>\n                                  <button\n                                    className=\"btn btn-outline-primary btn-sm flex-shrink-0\"\n                                    onClick={() =>\n                                      openPdfPage(\n                                        selectedDoc.file_url,\n                                        ctx.page_number\n                                      )\n                                    }\n                                  >\n                                    Page {ctx.page_number}\n                                  </button>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Modified Chat Input */}\n          <div className=\"chat-input p-4 border-top\">\n            <form onSubmit={handleQuerySubmit} className=\"d-flex gap-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder={\n                  selectedDocs.length > 0\n                    ? isRawMode\n                      ? \"Enter extraction query (e.g., 'Extract balance sheet from all documents')...\"\n                      : \"Ask a question...\"\n                    : \"Select documents first\"\n                }\n                disabled={!selectedDocs.length || loading}\n              />\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary px-4\"\n                disabled={!selectedDocs.length || loading || !query.trim()}\n              >\n                {isRawMode ? \"Extract\" : \"Send\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* PDF Viewer Modal */}\n      {pdfViewerState.isOpen && (\n        <PDFViewer\n          url={pdfViewerState.url}\n          pageNumber={pdfViewerState.pageNumber}\n          onClose={closePdfViewer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}